

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Nov 29 22:34:17 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	dabs	1,0x1,1,_EE_Key_2
    38  0000                     
    39                           ; Version 1.42
    40                           ; Generated 13/04/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F25K80 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	intcode_body
    75  00033A                     __pintcode_body:
    76                           	opt stack 0
    77  0000                     _BAUDCON1	set	4007
    78  0000                     _RCSTA1	set	4011
    79  0000                     _TXSTA1	set	4012
    80  0000                     _SPBRG1	set	4015
    81  0000                     _SPBRGH1	set	3965
    82  0000                     _PIR1bits	set	3998
    83  0000                     _RCSTA1bits	set	4011
    84  0000                     _RCREG1	set	4014
    85  0000                     _TXREG1	set	4013
    86  0000                     _TBLPTRU	set	4088
    87  0000                     _TBLPTRH	set	4087
    88  0000                     _TBLPTRL	set	4086
    89  0000                     _TABLAT	set	4085
    90  0000                     _INTCONbits	set	4082
    91  0000                     _EECON1bits	set	3967
    92  0000                     _EECON2	set	3966
    93  0000                     _EEADRH	set	3957
    94  0000                     _EEADR	set	3956
    95  0000                     _EEDATA	set	3955
    96  0000                     _PIR4bits	set	4023
    97  0000                     _OSCCON	set	4051
    98  0000                     _OSCCON2	set	4050
    99  0000                     _OSCTUNE	set	3995
   100  0000                     _REFOCON	set	3994
   101  0000                     _LATCbits	set	3979
   102  0000                     _STKPTR	set	4092
   103  0000                     _PORTBbits	set	3969
   104  0000                     _EECON1	set	3967
   105  0000                     _TXSTA1bits	set	4012
   106  0000                     _BAUDCON1bits	set	4007
   107  0000                     _RCREG	set	4014
   108  0000                     _LATA	set	3977
   109  0000                     _LATB	set	3978
   110  0000                     _LATC	set	3979
   111  0000                     _TRISA	set	3986
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISC	set	3988
   114  0000                     _TBLPTR	set	4086
   115  0000                     _ANCON0	set	3933
   116  0000                     _ANCON1	set	3932
   117  0000                     _WPUB	set	3931
   118  00033A                     int_func:
   119                           	opt stack 23
   120  00033A  CFFA F002          	movff	pclath,??_service_isr_high
   121  00033E  CFFB F003          	movff	pclatu,??_service_isr_high+1
   122  000342  CFE9 F004          	movff	fsr0l,??_service_isr_high+2
   123  000346  CFEA F005          	movff	fsr0h,??_service_isr_high+3
   124  00034A  CFE1 F006          	movff	fsr1l,??_service_isr_high+4
   125  00034E  CFE2 F007          	movff	fsr1h,??_service_isr_high+5
   126  000352  CFD9 F008          	movff	fsr2l,??_service_isr_high+6
   127  000356  CFDA F009          	movff	fsr2h,??_service_isr_high+7
   128  00035A  CFF3 F00A          	movff	prodl,??_service_isr_high+8
   129  00035E  CFF4 F00B          	movff	prodh,??_service_isr_high+9
   130  000362  CFF6 F00C          	movff	tblptrl,??_service_isr_high+10
   131  000366  CFF7 F00D          	movff	tblptrh,??_service_isr_high+11
   132  00036A  CFF8 F00E          	movff	tblptru,??_service_isr_high+12
   133  00036E  CFF5 F00F          	movff	tablat,??_service_isr_high+13
   134  000372  EF8C F001          	goto	792	;# 
   135  000376  C00F  FFF5         	movff	??_service_isr_high+13,tablat
   136  00037A  C00E  FFF8         	movff	??_service_isr_high+12,tblptru
   137  00037E  C00D  FFF7         	movff	??_service_isr_high+11,tblptrh
   138  000382  C00C  FFF6         	movff	??_service_isr_high+10,tblptrl
   139  000386  C00B  FFF4         	movff	??_service_isr_high+9,prodh
   140  00038A  C00A  FFF3         	movff	??_service_isr_high+8,prodl
   141  00038E  C009  FFDA         	movff	??_service_isr_high+7,fsr2h
   142  000392  C008  FFD9         	movff	??_service_isr_high+6,fsr2l
   143  000396  C007  FFE2         	movff	??_service_isr_high+5,fsr1h
   144  00039A  C006  FFE1         	movff	??_service_isr_high+4,fsr1l
   145  00039E  C005  FFEA         	movff	??_service_isr_high+3,fsr0h
   146  0003A2  C004  FFE9         	movff	??_service_isr_high+2,fsr0l
   147  0003A6  C003  FFFB         	movff	??_service_isr_high+1,pclatu
   148  0003AA  C002  FFFA         	movff	??_service_isr_high,pclath
   149  0003AE  9234               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   150  0003B0  0011               	retfie		f
   151  0003B2                     __end_of_service_isr_high:
   152                           	opt stack 0
   153  0000                     pclatu	equ	0xFFB
   154                           pclath	equ	0xFFA
   155                           tblptru	equ	0xFF8
   156                           tblptrh	equ	0xFF7
   157                           tblptrl	equ	0xFF6
   158                           tablat	equ	0xFF5
   159                           prodh	equ	0xFF4
   160                           prodl	equ	0xFF3
   161                           fsr0h	equ	0xFEA
   162                           fsr0l	equ	0xFE9
   163                           fsr1h	equ	0xFE2
   164                           fsr1l	equ	0xFE1
   165                           fsr2h	equ	0xFDA
   166                           fsr2l	equ	0xFD9
   167                           
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171  0006AC                     __pcinit:
   172                           	opt stack 0
   173  0006AC                     start_initialization:
   174                           	opt stack 0
   175  0006AC                     __initialization:
   176                           	opt stack 0
   177                           
   178                           ; Clear objects allocated to BANK0 (73 bytes)
   179  0006AC  EE00  F060         	lfsr	0,__pbssBANK0
   180  0006B0  0E49               	movlw	73
   181  0006B2                     clear_0:
   182  0006B2  6AEE               	clrf	postinc0,c
   183  0006B4  06E8               	decf	wreg,f,c
   184  0006B6  E1FD               	bnz	clear_0
   185                           
   186                           ; Clear objects allocated to COMRAM (8 bytes)
   187  0006B8  EE00  F02C         	lfsr	0,__pbssCOMRAM
   188  0006BC  0E08               	movlw	8
   189  0006BE                     clear_1:
   190  0006BE  6AEE               	clrf	postinc0,c
   191  0006C0  06E8               	decf	wreg,f,c
   192  0006C2  E1FD               	bnz	clear_1
   193  0006C4                     end_of_initialization:
   194                           	opt stack 0
   195  0006C4                     __end_of__initialization:
   196                           	opt stack 0
   197  0006C4  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   198  0006C6  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   199  0006C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  0006CA  6EF8               	movwf	tblptru,c
   201  0006CC  0100               	movlb	0
   202  0006CE  EFAD  F003         	goto	_main	;jump to C main() function
   203                           pclatu	equ	0xFFB
   204                           pclath	equ	0xFFA
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           prodh	equ	0xFF4
   210                           prodl	equ	0xFF3
   211                           postinc0	equ	0xFEE
   212                           fsr0h	equ	0xFEA
   213                           fsr0l	equ	0xFE9
   214                           wreg	equ	0xFE8
   215                           fsr1h	equ	0xFE2
   216                           fsr1l	equ	0xFE1
   217                           fsr2h	equ	0xFDA
   218                           fsr2l	equ	0xFD9
   219                           
   220                           	psect	bssCOMRAM
   221  00002C                     __pbssCOMRAM:
   222                           	opt stack 0
   223  00002C                     _counter:
   224                           	opt stack 0
   225  00002C                     	ds	2
   226  00002E                     _check_sum:
   227                           	opt stack 0
   228  00002E                     	ds	2
   229  000030                     _reset_pending:
   230                           	opt stack 0
   231  000030                     	ds	1
   232  000031                     _tx_data:
   233                           	opt stack 0
   234  000031                     	ds	1
   235  000032                     _rx_data:
   236                           	opt stack 0
   237  000032                     	ds	1
   238  000033                     _data_length:
   239                           	opt stack 0
   240  000033                     	ds	1
   241                           pclatu	equ	0xFFB
   242                           pclath	equ	0xFFA
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           prodh	equ	0xFF4
   248                           prodl	equ	0xFF3
   249                           postinc0	equ	0xFEE
   250                           fsr0h	equ	0xFEA
   251                           fsr0l	equ	0xFE9
   252                           wreg	equ	0xFE8
   253                           fsr1h	equ	0xFE2
   254                           fsr1l	equ	0xFE1
   255                           fsr2h	equ	0xFDA
   256                           fsr2l	equ	0xFD9
   257                           
   258                           	psect	bssBANK0
   259  000060                     __pbssBANK0:
   260                           	opt stack 0
   261  000060                     _frame:
   262                           	opt stack 0
   263  000060                     	ds	73
   264                           pclatu	equ	0xFFB
   265                           pclath	equ	0xFFA
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           prodh	equ	0xFF4
   271                           prodl	equ	0xFF3
   272                           postinc0	equ	0xFEE
   273                           fsr0h	equ	0xFEA
   274                           fsr0l	equ	0xFE9
   275                           wreg	equ	0xFE8
   276                           fsr1h	equ	0xFE2
   277                           fsr1l	equ	0xFE1
   278                           fsr2h	equ	0xFDA
   279                           fsr2l	equ	0xFD9
   280                           
   281                           	psect	cstackCOMRAM
   282  000002                     __pcstackCOMRAM:
   283                           	opt stack 0
   284  000002                     ??_service_isr_high:
   285  000002                     
   286                           ; 1 bytes @ 0x0
   287  000002                     	ds	14
   288  000010                     ??_service_isr_low:
   289                           
   290                           ; 1 bytes @ 0xE
   291  000010                     	ds	17
   292  000021                     ??_Read_Flash:
   293  000021                     ??_Write_Flash:
   294  000021                     ??_Read_EE_Data:
   295  000021                     ??_Write_EE_Data:
   296  000021                     ??_Read_Config:
   297  000021                     ??_Write_Config:
   298  000021                     EUSART1_Write@txData:
   299                           	opt stack 0
   300  000021                     Bootload_Required@i:
   301                           	opt stack 0
   302  000021                     Get_Version_Data@i:
   303                           	opt stack 0
   304  000021                     Erase_Flash@i:
   305                           	opt stack 0
   306  000021                     Calc_Checksum@i:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x1F
   310  000021                     	ds	2
   311  000023                     Read_Flash@i:
   312                           	opt stack 0
   313  000023                     Read_EE_Data@i:
   314                           	opt stack 0
   315  000023                     Write_EE_Data@i:
   316                           	opt stack 0
   317  000023                     Read_Config@i:
   318                           	opt stack 0
   319  000023                     Write_Config@i:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x21
   323  000023                     	ds	4
   324  000027                     Write_Flash@i:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x25
   328  000027                     	ds	1
   329  000028                     ProcessBootBuffer@len:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x26
   333  000028                     	ds	1
   334  000029                     Run_Bootloader@ch:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x27
   338  000029                     	ds	1
   339  00002A                     Run_Bootloader@msg_length:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x28
   343  00002A                     	ds	1
   344  00002B                     Run_Bootloader@index:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x29
   348  00002B                     	ds	1
   349  00002C                     pclatu	equ	0xFFB
   350                           pclath	equ	0xFFA
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           prodh	equ	0xFF4
   356                           prodl	equ	0xFF3
   357                           postinc0	equ	0xFEE
   358                           fsr0h	equ	0xFEA
   359                           fsr0l	equ	0xFE9
   360                           wreg	equ	0xFE8
   361                           fsr1h	equ	0xFE2
   362                           fsr1l	equ	0xFE1
   363                           fsr2h	equ	0xFDA
   364                           fsr2l	equ	0xFD9
   365                           
   366                           ; 1 bytes @ 0x2A
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 51 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; Hardware stack levels required when called:    8
   392 ;; This function calls:
   393 ;;		_SYSTEM_Initialize
   394 ;; This function is called by:
   395 ;;		Startup code after reset
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text0
   400  00075A                     __ptext0:
   401                           	opt stack 0
   402  00075A                     _main:
   403                           	opt stack 23
   404                           
   405                           ;main.c: 54: SYSTEM_Initialize();
   406                           
   407                           ;incstack = 0
   408  00075A  EC81  F003         	call	_SYSTEM_Initialize	;wreg free
   409  00075E                     l368:
   410                           
   411                           ;main.c: 85: {
   412  00075E  D7FF               	goto	l368
   413  000760                     __end_of_main:
   414                           	opt stack 0
   415                           pclatu	equ	0xFFB
   416                           pclath	equ	0xFFA
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           prodh	equ	0xFF4
   422                           prodl	equ	0xFF3
   423                           postinc0	equ	0xFEE
   424                           fsr0h	equ	0xFEA
   425                           fsr0l	equ	0xFE9
   426                           wreg	equ	0xFE8
   427                           fsr1h	equ	0xFE2
   428                           fsr1l	equ	0xFE1
   429                           fsr2h	equ	0xFDA
   430                           fsr2l	equ	0xFD9
   431                           
   432 ;; *************** function _SYSTEM_Initialize *****************
   433 ;; Defined at:
   434 ;;		line 117 in file "mcc_generated_files/mcc.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   452 ;;Total ram usage:        0 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; Hardware stack levels required when called:    7
   455 ;; This function calls:
   456 ;;		_BOOTLOADER_Initialize
   457 ;;		_EUSART1_Initialize
   458 ;;		_OSCILLATOR_Initialize
   459 ;;		_PIN_MANAGER_Initialize
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	text1
   466  000702                     __ptext1:
   467                           	opt stack 0
   468  000702                     _SYSTEM_Initialize:
   469                           	opt stack 23
   470                           
   471                           ;mcc.c: 120: PIN_MANAGER_Initialize();
   472                           
   473                           ;incstack = 0
   474  000702  EC42  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   475                           
   476                           ;mcc.c: 121: OSCILLATOR_Initialize();
   477  000706  EC8A  F003         	call	_OSCILLATOR_Initialize	;wreg free
   478                           
   479                           ;mcc.c: 122: EUSART1_Initialize();
   480  00070A  EC76  F003         	call	_EUSART1_Initialize	;wreg free
   481                           
   482                           ;mcc.c: 123: BOOTLOADER_Initialize();
   483  00070E  EC69  F003         	call	_BOOTLOADER_Initialize	;wreg free
   484  000712  0012               	return		;funcret
   485  000714                     __end_of_SYSTEM_Initialize:
   486                           	opt stack 0
   487                           pclatu	equ	0xFFB
   488                           pclath	equ	0xFFA
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           prodh	equ	0xFF4
   494                           prodl	equ	0xFF3
   495                           postinc0	equ	0xFEE
   496                           fsr0h	equ	0xFEA
   497                           fsr0l	equ	0xFE9
   498                           wreg	equ	0xFE8
   499                           fsr1h	equ	0xFE2
   500                           fsr1l	equ	0xFE1
   501                           fsr2h	equ	0xFDA
   502                           fsr2l	equ	0xFD9
   503                           
   504 ;; *************** function _PIN_MANAGER_Initialize *****************
   505 ;; Defined at:
   506 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    2
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_SYSTEM_Initialize
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text2
   535  000684                     __ptext2:
   536                           	opt stack 0
   537  000684                     _PIN_MANAGER_Initialize:
   538                           	opt stack 27
   539                           
   540                           ;pin_manager.c: 57: LATA = 0x00;
   541                           
   542                           ;incstack = 0
   543  000684  0E00               	movlw	0
   544  000686  6E89               	movwf	3977,c	;volatile
   545                           
   546                           ;pin_manager.c: 58: LATB = 0x00;
   547  000688  0E00               	movlw	0
   548  00068A  6E8A               	movwf	3978,c	;volatile
   549                           
   550                           ;pin_manager.c: 59: LATC = 0x00;
   551  00068C  0E00               	movlw	0
   552  00068E  6E8B               	movwf	3979,c	;volatile
   553                           
   554                           ;pin_manager.c: 64: TRISA = 0xEF;
   555  000690  0EEF               	movlw	239
   556  000692  6E92               	movwf	3986,c	;volatile
   557                           
   558                           ;pin_manager.c: 65: TRISB = 0xFF;
   559  000694  6893               	setf	3987,c	;volatile
   560                           
   561                           ;pin_manager.c: 66: TRISC = 0xBD;
   562  000696  0EBD               	movlw	189
   563  000698  6E94               	movwf	3988,c	;volatile
   564                           
   565                           ;pin_manager.c: 71: ANCON0 = 0x1F;
   566  00069A  0E1F               	movlw	31
   567  00069C  010F               	movlb	15	; () banked
   568  00069E  6F5D               	movwf	93,b	;volatile
   569                           
   570                           ;pin_manager.c: 72: ANCON1 = 0x05;
   571  0006A0  0E05               	movlw	5
   572  0006A2  010F               	movlb	15	; () banked
   573  0006A4  6F5C               	movwf	92,b	;volatile
   574                           
   575                           ; BSR set to: 15
   576                           ;pin_manager.c: 77: WPUB = 0xFF;
   577  0006A6  010F               	movlb	15	; () banked
   578  0006A8  695B               	setf	91,b	;volatile
   579                           
   580                           ; BSR set to: 15
   581  0006AA  0012               	return		;funcret
   582  0006AC                     __end_of_PIN_MANAGER_Initialize:
   583                           	opt stack 0
   584                           pclatu	equ	0xFFB
   585                           pclath	equ	0xFFA
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           prodh	equ	0xFF4
   591                           prodl	equ	0xFF3
   592                           postinc0	equ	0xFEE
   593                           fsr0h	equ	0xFEA
   594                           fsr0l	equ	0xFE9
   595                           wreg	equ	0xFE8
   596                           fsr1h	equ	0xFE2
   597                           fsr1l	equ	0xFE1
   598                           fsr2h	equ	0xFDA
   599                           fsr2l	equ	0xFD9
   600                           
   601 ;; *************** function _OSCILLATOR_Initialize *****************
   602 ;; Defined at:
   603 ;;		line 126 in file "mcc_generated_files/mcc.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   621 ;;Total ram usage:        0 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    2
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_SYSTEM_Initialize
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text3
   632  000714                     __ptext3:
   633                           	opt stack 0
   634  000714                     _OSCILLATOR_Initialize:
   635                           	opt stack 27
   636                           
   637                           ;mcc.c: 129: OSCCON = 0x30;
   638                           
   639                           ; BSR set to: 15
   640                           ;incstack = 0
   641  000714  0E30               	movlw	48
   642  000716  6ED3               	movwf	4051,c	;volatile
   643                           
   644                           ;mcc.c: 131: OSCCON2 = 0x00;
   645  000718  0E00               	movlw	0
   646  00071A  6ED2               	movwf	4050,c	;volatile
   647                           
   648                           ;mcc.c: 133: OSCTUNE = 0x00;
   649  00071C  0E00               	movlw	0
   650  00071E  6E9B               	movwf	3995,c	;volatile
   651                           
   652                           ;mcc.c: 135: REFOCON = 0x00;
   653  000720  0E00               	movlw	0
   654  000722  6E9A               	movwf	3994,c	;volatile
   655  000724  0012               	return		;funcret
   656  000726                     __end_of_OSCILLATOR_Initialize:
   657                           	opt stack 0
   658                           pclatu	equ	0xFFB
   659                           pclath	equ	0xFFA
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           prodh	equ	0xFF4
   665                           prodl	equ	0xFF3
   666                           postinc0	equ	0xFEE
   667                           fsr0h	equ	0xFEA
   668                           fsr0l	equ	0xFE9
   669                           wreg	equ	0xFE8
   670                           fsr1h	equ	0xFE2
   671                           fsr1l	equ	0xFE1
   672                           fsr2h	equ	0xFDA
   673                           fsr2l	equ	0xFD9
   674                           
   675 ;; *************** function _EUSART1_Initialize *****************
   676 ;; Defined at:
   677 ;;		line 55 in file "mcc_generated_files/eusart1.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    2
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_SYSTEM_Initialize
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text4
   706  0006EC                     __ptext4:
   707                           	opt stack 0
   708  0006EC                     _EUSART1_Initialize:
   709                           	opt stack 27
   710                           
   711                           ;eusart1.c: 60: BAUDCON1 = 0x08;
   712                           
   713                           ;incstack = 0
   714  0006EC  0E08               	movlw	8
   715  0006EE  6EA7               	movwf	4007,c	;volatile
   716                           
   717                           ;eusart1.c: 63: RCSTA1 = 0x90;
   718  0006F0  0E90               	movlw	144
   719  0006F2  6EAB               	movwf	4011,c	;volatile
   720                           
   721                           ;eusart1.c: 66: TXSTA1 = 0x24;
   722  0006F4  0E24               	movlw	36
   723  0006F6  6EAC               	movwf	4012,c	;volatile
   724                           
   725                           ;eusart1.c: 69: SPBRG1 = 0x0C;
   726  0006F8  0E0C               	movlw	12
   727  0006FA  6EAF               	movwf	4015,c	;volatile
   728                           
   729                           ;eusart1.c: 72: SPBRGH1 = 0x00;
   730  0006FC  0E00               	movlw	0
   731  0006FE  6E7D               	movwf	3965,c	;volatile
   732  000700  0012               	return		;funcret
   733  000702                     __end_of_EUSART1_Initialize:
   734                           	opt stack 0
   735                           pclatu	equ	0xFFB
   736                           pclath	equ	0xFFA
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           tblptrl	equ	0xFF6
   740                           tablat	equ	0xFF5
   741                           prodh	equ	0xFF4
   742                           prodl	equ	0xFF3
   743                           postinc0	equ	0xFEE
   744                           fsr0h	equ	0xFEA
   745                           fsr0l	equ	0xFE9
   746                           wreg	equ	0xFE8
   747                           fsr1h	equ	0xFE2
   748                           fsr1l	equ	0xFE1
   749                           fsr2h	equ	0xFDA
   750                           fsr2l	equ	0xFD9
   751                           
   752 ;; *************** function _BOOTLOADER_Initialize *****************
   753 ;; Defined at:
   754 ;;		line 141 in file "mcc_generated_files/pic18f_bootload.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   772 ;;Total ram usage:        0 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    6
   775 ;; This function calls:
   776 ;;		_Bootload_Required
   777 ;;		_Run_Bootloader
   778 ;; This function is called by:
   779 ;;		_SYSTEM_Initialize
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text5
   784  0006D2                     __ptext5:
   785                           	opt stack 0
   786  0006D2                     _BOOTLOADER_Initialize:
   787                           	opt stack 23
   788                           
   789                           ;pic18f_bootload.c: 143: LATCbits.LATC1 = 1;
   790                           
   791                           ;incstack = 0
   792  0006D2  828B               	bsf	3979,1,c	;volatile
   793                           
   794                           ;pic18f_bootload.c: 144: if (Bootload_Required () == 1)
   795  0006D4  EC26  F003         	call	_Bootload_Required	;wreg free
   796  0006D8  06E8               	decf	wreg,f,c
   797  0006DA  B4D8               	btfsc	status,2,c
   798                           
   799                           ;pic18f_bootload.c: 145: {
   800                           ;pic18f_bootload.c: 146: Run_Bootloader ();
   801  0006DC  ECB2  F000         	call	_Run_Bootloader	;wreg free
   802                           
   803                           ;pic18f_bootload.c: 147: }
   804                           ;pic18f_bootload.c: 148: STKPTR = 0x00;
   805  0006E0  0E00               	movlw	0
   806  0006E2  6EFC               	movwf	stkptr,c	;volatile
   807                           
   808                           ;pic18f_bootload.c: 149: LATCbits.LATC1 = 0;
   809  0006E4  928B               	bcf	3979,1,c	;# 
   810  0006E6  EF80 F001          	goto	768	;# 
   811  0006EA  0012               	return		;funcret
   812  0006EC                     __end_of_BOOTLOADER_Initialize:
   813                           	opt stack 0
   814                           stkptr	equ	0xFFC
   815                           pclatu	equ	0xFFB
   816                           pclath	equ	0xFFA
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           prodh	equ	0xFF4
   822                           prodl	equ	0xFF3
   823                           postinc0	equ	0xFEE
   824                           fsr0h	equ	0xFEA
   825                           fsr0l	equ	0xFE9
   826                           wreg	equ	0xFE8
   827                           fsr1h	equ	0xFE2
   828                           fsr1l	equ	0xFE1
   829                           fsr2h	equ	0xFDA
   830                           fsr2l	equ	0xFD9
   831                           status	equ	0xFD8
   832                           
   833 ;; *************** function _Run_Bootloader *****************
   834 ;; Defined at:
   835 ;;		line 62 in file "mcc_generated_files/pic18f_uart.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  ch              1   39[COMRAM] unsigned char 
   840 ;;  index           1   41[COMRAM] volatile unsigned char 
   841 ;;  msg_length      1   40[COMRAM] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   855 ;;Total ram usage:        3 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    5
   858 ;; This function calls:
   859 ;;		_Check_Device_Reset
   860 ;;		_EUSART1_Read
   861 ;;		_EUSART1_Write
   862 ;;		_ProcessBootBuffer
   863 ;; This function is called by:
   864 ;;		_BOOTLOADER_Initialize
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text6
   869  000164                     __ptext6:
   870                           	opt stack 0
   871  000164                     _Run_Bootloader:
   872                           	opt stack 23
   873  000164                     l318:
   874  000164  A2AC               	btfss	4012,1,c	;volatile
   875  000166  D7FE               	goto	l318
   876                           
   877                           ;pic18f_uart.c: 71: Check_Device_Reset ();
   878  000168  ECA7  F003         	call	_Check_Device_Reset	;wreg free
   879  00016C  D004               	goto	L1
   880  00016E                     l322:
   881                           
   882                           ;pic18f_uart.c: 78: {
   883                           ;pic18f_uart.c: 79: if (BAUDCON1bits.ABDOVF == 1)
   884  00016E  AEA7               	btfss	4007,7,c	;volatile
   885  000170  D003               	goto	l321
   886                           
   887                           ;pic18f_uart.c: 80: {
   888                           ;pic18f_uart.c: 81: BAUDCON1bits.ABDEN = 0;
   889  000172  90A7               	bcf	4007,0,c	;volatile
   890                           
   891                           ;pic18f_uart.c: 82: BAUDCON1bits.ABDOVF = 0;
   892  000174  9EA7               	bcf	4007,7,c	;volatile
   893  000176                     L1:
   894                           
   895                           ;pic18f_uart.c: 83: BAUDCON1bits.ABDEN = 1;
   896  000176  80A7               	bsf	4007,0,c	;volatile
   897  000178                     l321:
   898  000178  B0A7               	btfsc	4007,0,c	;volatile
   899  00017A  D7F9               	goto	l322
   900                           
   901                           ;pic18f_uart.c: 84: }
   902                           ;pic18f_uart.c: 85: }
   903                           ;pic18f_uart.c: 87: index = RCREG;
   904  00017C  CFAE F02B          	movff	4014,Run_Bootloader@index	;volatile
   905                           
   906                           ;pic18f_uart.c: 93: index = 0;
   907  000180  0E00               	movlw	0
   908  000182  6E2B               	movwf	Run_Bootloader@index,c	;volatile
   909                           
   910                           ;pic18f_uart.c: 94: msg_length = 9;
   911  000184  0E09               	movlw	9
   912  000186  6E2A               	movwf	Run_Bootloader@msg_length,c
   913                           
   914                           ;pic18f_uart.c: 95: uint8_t ch;
   915                           ;pic18f_uart.c: 97: while (index < msg_length)
   916  000188  D024               	goto	l325
   917  00018A                     l1715:
   918                           
   919                           ;pic18f_uart.c: 98: {
   920                           ;pic18f_uart.c: 99: ch = EUSART1_Read();
   921  00018A  EC93  F003         	call	_EUSART1_Read	;wreg free
   922  00018E  6E29               	movwf	Run_Bootloader@ch,c
   923                           
   924                           ;pic18f_uart.c: 100: frame.buffer [index ++] = ch;
   925  000190  502B               	movf	Run_Bootloader@index,w,c	;volatile
   926  000192  0D01               	mullw	1
   927  000194  0E60               	movlw	low _frame
   928  000196  24F3               	addwf	prodl,w,c
   929  000198  6ED9               	movwf	fsr2l,c
   930  00019A  0E00               	movlw	high _frame
   931  00019C  20F4               	addwfc	prodh,w,c
   932  00019E  6EDA               	movwf	fsr2h,c
   933  0001A0  C029  FFDF         	movff	Run_Bootloader@ch,indf2
   934  0001A4  2A2B               	incf	Run_Bootloader@index,f,c	;volatile
   935                           
   936                           ;pic18f_uart.c: 101: if (index == 4)
   937  0001A6  0E04               	movlw	4
   938  0001A8  182B               	xorwf	Run_Bootloader@index,w,c	;volatile
   939  0001AA  A4D8               	btfss	status,2,c
   940  0001AC  D012               	goto	l325
   941                           
   942                           ;pic18f_uart.c: 102: {
   943                           ;pic18f_uart.c: 103: if ((frame.command == 2)
   944                           ;pic18f_uart.c: 104: || (frame.command == 5)
   945                           ;pic18f_uart.c: 105: || (frame.command == 7))
   946  0001AE  0E02               	movlw	2
   947  0001B0  0100               	movlb	0	; () banked
   948  0001B2  1960               	xorwf	_frame& (0+255),w,b
   949  0001B4  B4D8               	btfsc	status,2,c
   950  0001B6  D00A               	goto	l1729
   951                           
   952                           ; BSR set to: 0
   953  0001B8  0E05               	movlw	5
   954  0001BA  0100               	movlb	0	; () banked
   955  0001BC  1960               	xorwf	_frame& (0+255),w,b
   956  0001BE  B4D8               	btfsc	status,2,c
   957  0001C0  D005               	goto	l1729
   958                           
   959                           ; BSR set to: 0
   960  0001C2  0E07               	movlw	7
   961  0001C4  0100               	movlb	0	; () banked
   962  0001C6  1960               	xorwf	_frame& (0+255),w,b
   963  0001C8  A4D8               	btfss	status,2,c
   964  0001CA  D003               	goto	l325
   965  0001CC                     l1729:
   966                           
   967                           ; BSR set to: 0
   968                           ;pic18f_uart.c: 106: {
   969                           ;pic18f_uart.c: 107: msg_length += frame.data_length;
   970  0001CC  0100               	movlb	0	; () banked
   971  0001CE  5161               	movf	(_frame+1)& (0+255),w,b
   972  0001D0  262A               	addwf	Run_Bootloader@msg_length,f,c
   973  0001D2                     l325:
   974  0001D2  502A               	movf	Run_Bootloader@msg_length,w,c
   975  0001D4  5C2B               	subwf	Run_Bootloader@index,w,c	;volatile
   976  0001D6  A0D8               	btfss	status,0,c
   977  0001D8  D7D8               	goto	l1715
   978                           
   979                           ;pic18f_uart.c: 108: }
   980                           ;pic18f_uart.c: 109: }
   981                           ;pic18f_uart.c: 110: }
   982                           ;pic18f_uart.c: 112: msg_length = ProcessBootBuffer ();
   983  0001DA  EC07  F001         	call	_ProcessBootBuffer	;wreg free
   984  0001DE  6E2A               	movwf	Run_Bootloader@msg_length,c
   985                           
   986                           ;pic18f_uart.c: 117: EUSART1_Write(0x55);
   987  0001E0  0E55               	movlw	85
   988  0001E2  ECA1  F003         	call	_EUSART1_Write
   989                           
   990                           ;pic18f_uart.c: 118: index = 0;
   991  0001E6  0E00               	movlw	0
   992  0001E8  6E2B               	movwf	Run_Bootloader@index,c	;volatile
   993                           
   994                           ;pic18f_uart.c: 119: while (index < msg_length)
   995  0001EA  D00C               	goto	l1741
   996  0001EC                     l1737:
   997                           
   998                           ;pic18f_uart.c: 120: {
   999                           ;pic18f_uart.c: 121: EUSART1_Write (frame.buffer [index++]);
  1000  0001EC  502B               	movf	Run_Bootloader@index,w,c	;volatile
  1001  0001EE  0D01               	mullw	1
  1002  0001F0  0E60               	movlw	low _frame
  1003  0001F2  24F3               	addwf	prodl,w,c
  1004  0001F4  6ED9               	movwf	fsr2l,c
  1005  0001F6  0E00               	movlw	high _frame
  1006  0001F8  20F4               	addwfc	prodh,w,c
  1007  0001FA  6EDA               	movwf	fsr2h,c
  1008  0001FC  50DF               	movf	indf2,w,c
  1009  0001FE  ECA1  F003         	call	_EUSART1_Write
  1010  000202  2A2B               	incf	Run_Bootloader@index,f,c	;volatile
  1011  000204                     l1741:
  1012  000204  502A               	movf	Run_Bootloader@msg_length,w,c
  1013  000206  5C2B               	subwf	Run_Bootloader@index,w,c	;volatile
  1014  000208  B0D8               	btfsc	status,0,c
  1015  00020A  D7AC               	goto	l318
  1016  00020C  D7EF               	goto	l1737
  1017  00020E                     __end_of_Run_Bootloader:
  1018                           	opt stack 0
  1019                           stkptr	equ	0xFFC
  1020                           pclatu	equ	0xFFB
  1021                           pclath	equ	0xFFA
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           prodh	equ	0xFF4
  1027                           prodl	equ	0xFF3
  1028                           postinc0	equ	0xFEE
  1029                           fsr0h	equ	0xFEA
  1030                           fsr0l	equ	0xFE9
  1031                           wreg	equ	0xFE8
  1032                           fsr1h	equ	0xFE2
  1033                           fsr1l	equ	0xFE1
  1034                           indf2	equ	0xFDF
  1035                           fsr2h	equ	0xFDA
  1036                           fsr2l	equ	0xFD9
  1037                           status	equ	0xFD8
  1038                           
  1039 ;; *************** function _ProcessBootBuffer *****************
  1040 ;; Defined at:
  1041 ;;		line 188 in file "mcc_generated_files/pic18f_bootload.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  len             1   38[COMRAM] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      unsigned char 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;Total ram usage:        1 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    4
  1062 ;; This function calls:
  1063 ;;		_Calc_Checksum
  1064 ;;		_Erase_Flash
  1065 ;;		_Get_Version_Data
  1066 ;;		_Read_Config
  1067 ;;		_Read_EE_Data
  1068 ;;		_Read_Flash
  1069 ;;		_Write_Config
  1070 ;;		_Write_EE_Data
  1071 ;;		_Write_Flash
  1072 ;; This function is called by:
  1073 ;;		_Run_Bootloader
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text7
  1078  00020E                     __ptext7:
  1079                           	opt stack 0
  1080  00020E                     _ProcessBootBuffer:
  1081                           	opt stack 23
  1082                           
  1083                           ;pic18f_bootload.c: 190: uint8_t len;
  1084                           ;pic18f_bootload.c: 191: EE_Key_1 = frame.EE_key_1;
  1085                           
  1086                           ;incstack = 0
  1087  00020E  C063  F000         	movff	_frame+3,0
  1088                           
  1089                           ;pic18f_bootload.c: 192: EE_Key_2 = frame.EE_key_2;
  1090  000212  C064  F001         	movff	_frame+4,1
  1091                           
  1092                           ;pic18f_bootload.c: 195: switch (frame.command)
  1093  000216  D024               	goto	l1697
  1094  000218                     l1675:
  1095                           
  1096                           ;pic18f_bootload.c: 198: len = Get_Version_Data();
  1097  000218  EC53  F001         	call	_Get_Version_Data	;wreg free
  1098  00021C  D01F               	goto	L11
  1099  00021E                     l1677:
  1100                           
  1101                           ;pic18f_bootload.c: 201: len = Read_Flash();
  1102  00021E  ECA9  F002         	call	_Read_Flash	;wreg free
  1103  000222  D01C               	goto	L11
  1104  000224                     l1679:
  1105                           
  1106                           ;pic18f_bootload.c: 204: len = Write_Flash();
  1107  000224  EC57  F000         	call	_Write_Flash	;wreg free
  1108  000228  D019               	goto	L11
  1109  00022A                     l1681:
  1110                           
  1111                           ;pic18f_bootload.c: 207: len = Erase_Flash();
  1112  00022A  EC15  F002         	call	_Erase_Flash	;wreg free
  1113  00022E  D016               	goto	L11
  1114  000230                     l1683:
  1115                           
  1116                           ;pic18f_bootload.c: 210: len = Read_EE_Data();
  1117  000230  ECFD  F002         	call	_Read_EE_Data	;wreg free
  1118  000234  D013               	goto	L11
  1119  000236                     l1685:
  1120                           
  1121                           ;pic18f_bootload.c: 213: len = Write_EE_Data();
  1122  000236  EC4A  F002         	call	_Write_EE_Data	;wreg free
  1123  00023A  D010               	goto	L11
  1124  00023C                     l1687:
  1125                           
  1126                           ;pic18f_bootload.c: 216: len = Read_Config();
  1127  00023C  ECD3  F002         	call	_Read_Config	;wreg free
  1128  000240  D00D               	goto	L11
  1129  000242                     l1689:
  1130                           
  1131                           ;pic18f_bootload.c: 219: len = Write_Config();
  1132  000242  ECD9  F001         	call	_Write_Config	;wreg free
  1133  000246  D00A               	goto	L11
  1134  000248                     l1691:
  1135                           
  1136                           ;pic18f_bootload.c: 222: len = Calc_Checksum();
  1137  000248  EC7D  F002         	call	_Calc_Checksum	;wreg free
  1138  00024C  D007               	goto	L11
  1139  00024E                     l1693:
  1140                           
  1141                           ;pic18f_bootload.c: 225: reset_pending = 1;
  1142  00024E  0E01               	movlw	1
  1143  000250  6E30               	movwf	_reset_pending,c
  1144                           
  1145                           ;pic18f_bootload.c: 226: len = 9;
  1146  000252  0E09               	movlw	9
  1147  000254  D003               	goto	L11
  1148  000256                     l226:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;pic18f_bootload.c: 229: frame.data[0] = 0xFF;
  1152  000256  0100               	movlb	0	; () banked
  1153  000258  6969               	setf	(_frame+9)& (0+255),b
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;pic18f_bootload.c: 230: len = 10;
  1157  00025A  0E0A               	movlw	10
  1158  00025C                     L11:
  1159  00025C  6E28               	movwf	ProcessBootBuffer@len,c
  1160                           
  1161                           ;pic18f_bootload.c: 231: }
  1162  00025E  D021               	goto	l1699
  1163  000260                     l1697:
  1164  000260  0100               	movlb	0	; () banked
  1165  000262  5160               	movf	_frame& (0+255),w,b
  1166                           
  1167                           ; Switch size 1, requested type "space"
  1168                           ; Number of cases is 10, Range of values is 0 to 9
  1169                           ; switch strategies available:
  1170                           ; Name         Instructions Cycles
  1171                           ; simple_byte           31    16 (average)
  1172                           ;	Chosen strategy is simple_byte
  1173  000264  0A00               	xorlw	0	; case 0
  1174  000266  B4D8               	btfsc	status,2,c
  1175  000268  D7D7               	goto	l1675
  1176  00026A  0A01               	xorlw	1	; case 1
  1177  00026C  B4D8               	btfsc	status,2,c
  1178  00026E  D7D7               	goto	l1677
  1179  000270  0A03               	xorlw	3	; case 2
  1180  000272  B4D8               	btfsc	status,2,c
  1181  000274  D7D7               	goto	l1679
  1182  000276  0A01               	xorlw	1	; case 3
  1183  000278  B4D8               	btfsc	status,2,c
  1184  00027A  D7D7               	goto	l1681
  1185  00027C  0A07               	xorlw	7	; case 4
  1186  00027E  B4D8               	btfsc	status,2,c
  1187  000280  D7D7               	goto	l1683
  1188  000282  0A01               	xorlw	1	; case 5
  1189  000284  B4D8               	btfsc	status,2,c
  1190  000286  D7D7               	goto	l1685
  1191  000288  0A03               	xorlw	3	; case 6
  1192  00028A  B4D8               	btfsc	status,2,c
  1193  00028C  D7D7               	goto	l1687
  1194  00028E  0A01               	xorlw	1	; case 7
  1195  000290  B4D8               	btfsc	status,2,c
  1196  000292  D7D7               	goto	l1689
  1197  000294  0A0F               	xorlw	15	; case 8
  1198  000296  B4D8               	btfsc	status,2,c
  1199  000298  D7D7               	goto	l1691
  1200  00029A  0A01               	xorlw	1	; case 9
  1201  00029C  B4D8               	btfsc	status,2,c
  1202  00029E  D7D7               	goto	l1693
  1203  0002A0  D7DA               	goto	l226
  1204  0002A2                     l1699:
  1205                           
  1206                           ;pic18f_bootload.c: 232: return (len);
  1207  0002A2  5028               	movf	ProcessBootBuffer@len,w,c
  1208  0002A4  0012               	return	
  1209  0002A6                     __end_of_ProcessBootBuffer:
  1210                           	opt stack 0
  1211                           stkptr	equ	0xFFC
  1212                           pclatu	equ	0xFFB
  1213                           pclath	equ	0xFFA
  1214                           tblptru	equ	0xFF8
  1215                           tblptrh	equ	0xFF7
  1216                           tblptrl	equ	0xFF6
  1217                           tablat	equ	0xFF5
  1218                           prodh	equ	0xFF4
  1219                           prodl	equ	0xFF3
  1220                           postinc0	equ	0xFEE
  1221                           fsr0h	equ	0xFEA
  1222                           fsr0l	equ	0xFE9
  1223                           wreg	equ	0xFE8
  1224                           fsr1h	equ	0xFE2
  1225                           fsr1l	equ	0xFE1
  1226                           indf2	equ	0xFDF
  1227                           fsr2h	equ	0xFDA
  1228                           fsr2l	equ	0xFD9
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function _Write_Flash *****************
  1232 ;; Defined at:
  1233 ;;		line 305 in file "mcc_generated_files/pic18f_bootload.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  i               1   37[COMRAM] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      unsigned char 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1249 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1250 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1251 ;;Total ram usage:        7 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    3
  1254 ;; This function calls:
  1255 ;;		_StartWrite
  1256 ;; This function is called by:
  1257 ;;		_ProcessBootBuffer
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text8
  1262  0000AE                     __ptext8:
  1263                           	opt stack 0
  1264  0000AE                     _Write_Flash:
  1265                           	opt stack 23
  1266                           
  1267                           ;pic18f_bootload.c: 307: TBLPTRL = frame.address_L;
  1268                           
  1269                           ;incstack = 0
  1270  0000AE  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  1271                           
  1272                           ;pic18f_bootload.c: 308: TBLPTRH = frame.address_H;
  1273  0000B2  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  1274                           
  1275                           ;pic18f_bootload.c: 309: TBLPTRU = frame.address_U;
  1276  0000B6  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  1277                           
  1278                           ;pic18f_bootload.c: 310: EECON1 = 0xA4;
  1279  0000BA  0EA4               	movlw	164
  1280  0000BC  6E7F               	movwf	3967,c	;volatile
  1281                           
  1282                           ;pic18f_bootload.c: 311: for (uint8_t i = 0; i < frame.data_length; i ++)
  1283  0000BE  0E00               	movlw	0
  1284  0000C0  6E27               	movwf	Write_Flash@i,c
  1285  0000C2  D03C               	goto	l1529
  1286  0000C4                     l1511:
  1287                           
  1288                           ;pic18f_bootload.c: 312: {
  1289                           ;pic18f_bootload.c: 313: TABLAT = frame.data[i];
  1290  0000C4  5027               	movf	Write_Flash@i,w,c
  1291  0000C6  0D01               	mullw	1
  1292  0000C8  0E09               	movlw	9
  1293  0000CA  26F3               	addwf	prodl,f,c
  1294  0000CC  0E00               	movlw	0
  1295  0000CE  22F4               	addwfc	prodh,f,c
  1296  0000D0  0E60               	movlw	low _frame
  1297  0000D2  24F3               	addwf	prodl,w,c
  1298  0000D4  6ED9               	movwf	fsr2l,c
  1299  0000D6  0E00               	movlw	high _frame
  1300  0000D8  20F4               	addwfc	prodh,w,c
  1301  0000DA  6EDA               	movwf	fsr2h,c
  1302  0000DC  50DF               	movf	indf2,w,c
  1303  0000DE  6EF5               	movwf	tablat,c	;volatile
  1304                           
  1305                           ;pic18f_bootload.c: 314: if (TBLPTR >= 32768)
  1306  0000E0  50F8               	movf	tblptru,w,c	;volatile
  1307  0000E2  E104               	bnz	u490
  1308  0000E4  0E80               	movlw	128
  1309  0000E6  5CF7               	subwf	tblptrh,w,c	;volatile
  1310  0000E8  A0D8               	btfss	status,0,c
  1311  0000EA  D005               	goto	l243
  1312  0000EC                     u490:
  1313                           
  1314                           ;pic18f_bootload.c: 315: {
  1315                           ;pic18f_bootload.c: 316: frame.data[0] = 0xFE;
  1316  0000EC  0EFE               	movlw	254
  1317  0000EE  0100               	movlb	0	; () banked
  1318  0000F0  6F69               	movwf	(_frame+9)& (0+255),b
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;pic18f_bootload.c: 317: return (10);
  1322  0000F2  0E0A               	movlw	10
  1323                           
  1324                           ; BSR set to: 0
  1325  0000F4  0012               	return	
  1326  0000F6                     l243:
  1327  0000F6  000D               	tblwt		*+	;# 
  1328                           
  1329                           ;pic18f_bootload.c: 320: if (((TBLPTRL & (64 - 1)) == (64 - 1))
  1330                           ;pic18f_bootload.c: 321: || (i == frame.data_length - 1))
  1331  0000F8  50F6               	movf	tblptrl,w,c	;volatile
  1332  0000FA  0B3F               	andlw	63
  1333  0000FC  0A3F               	xorlw	63
  1334  0000FE  B4D8               	btfsc	status,2,c
  1335  000100  D018               	goto	l247
  1336  000102  5027               	movf	Write_Flash@i,w,c
  1337  000104  6E21               	movwf	??_Write_Flash& (0+255),c
  1338  000106  6A22               	clrf	(??_Write_Flash+1)& (0+255),c
  1339  000108  0EFF               	movlw	255
  1340  00010A  6E23               	movwf	(??_Write_Flash+2)& (0+255),c
  1341  00010C  0EFF               	movlw	255
  1342  00010E  6E24               	movwf	(??_Write_Flash+3)& (0+255),c
  1343  000110  EE20  F061         	lfsr	2,_frame+1
  1344  000114  CFDE F025          	movff	postinc2,??_Write_Flash+4
  1345  000118  CFDD F026          	movff	postdec2,??_Write_Flash+5
  1346  00011C  5023               	movf	??_Write_Flash+2,w,c
  1347  00011E  2625               	addwf	??_Write_Flash+4,f,c
  1348  000120  5024               	movf	??_Write_Flash+3,w,c
  1349  000122  2226               	addwfc	??_Write_Flash+5,f,c
  1350  000124  5021               	movf	??_Write_Flash,w,c
  1351  000126  1825               	xorwf	??_Write_Flash+4,w,c
  1352  000128  E108               	bnz	l1527
  1353  00012A  5022               	movf	??_Write_Flash+1,w,c
  1354  00012C  1826               	xorwf	??_Write_Flash+5,w,c
  1355  00012E  A4D8               	btfss	status,2,c
  1356  000130  D004               	goto	l1527
  1357  000132                     l247:
  1358  000132  000A               	tblrd		*-	;# 
  1359                           
  1360                           ;pic18f_bootload.c: 324: StartWrite();
  1361  000134  EC9B  F003         	call	_StartWrite	;wreg free
  1362  000138  0009               	tblrd		*+	;# 
  1363  00013A                     l1527:
  1364  00013A  2A27               	incf	Write_Flash@i,f,c
  1365  00013C                     l1529:
  1366  00013C  5027               	movf	Write_Flash@i,w,c
  1367  00013E  6E21               	movwf	??_Write_Flash& (0+255),c
  1368  000140  6A22               	clrf	(??_Write_Flash+1)& (0+255),c
  1369  000142  0100               	movlb	0	; () banked
  1370  000144  5161               	movf	(_frame+1)& (0+255),w,b
  1371  000146  5C21               	subwf	??_Write_Flash,w,c
  1372  000148  0100               	movlb	0	; () banked
  1373  00014A  5162               	movf	(_frame+2)& (0+255),w,b
  1374  00014C  5822               	subwfb	??_Write_Flash+1,w,c
  1375  00014E  A0D8               	btfss	status,0,c
  1376  000150  D7B9               	goto	l1511
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;pic18f_bootload.c: 326: }
  1380                           ;pic18f_bootload.c: 327: }
  1381                           ;pic18f_bootload.c: 328: frame.data[0] = 0x01;
  1382                           
  1383                           ; BSR set to: 0
  1384  000152  0E01               	movlw	1
  1385  000154  0100               	movlb	0	; () banked
  1386  000156  6F69               	movwf	(_frame+9)& (0+255),b
  1387                           
  1388                           ;pic18f_bootload.c: 329: EE_Key_1 = 0x00;
  1389  000158  0E00               	movlw	0
  1390  00015A  6E00               	movwf	0,c
  1391                           
  1392                           ;pic18f_bootload.c: 330: EE_Key_2 = 0x00;
  1393  00015C  0E00               	movlw	0
  1394  00015E  6E01               	movwf	1,c
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;pic18f_bootload.c: 331: return (10);
  1398  000160  0E0A               	movlw	10
  1399  000162  0012               	return	
  1400  000164                     __end_of_Write_Flash:
  1401                           	opt stack 0
  1402                           stkptr	equ	0xFFC
  1403                           pclatu	equ	0xFFB
  1404                           pclath	equ	0xFFA
  1405                           tblptru	equ	0xFF8
  1406                           tblptrh	equ	0xFF7
  1407                           tblptrl	equ	0xFF6
  1408                           tablat	equ	0xFF5
  1409                           prodh	equ	0xFF4
  1410                           prodl	equ	0xFF3
  1411                           postinc0	equ	0xFEE
  1412                           fsr0h	equ	0xFEA
  1413                           fsr0l	equ	0xFE9
  1414                           wreg	equ	0xFE8
  1415                           fsr1h	equ	0xFE2
  1416                           fsr1l	equ	0xFE1
  1417                           indf2	equ	0xFDF
  1418                           postinc2	equ	0xFDE
  1419                           postdec2	equ	0xFDD
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _Write_EE_Data *****************
  1425 ;; Defined at:
  1426 ;;		line 391 in file "mcc_generated_files/pic18f_bootload.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  i               1   33[COMRAM] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      unsigned char 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1443 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1444 ;;Total ram usage:        3 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    3
  1447 ;; This function calls:
  1448 ;;		_StartWrite
  1449 ;; This function is called by:
  1450 ;;		_ProcessBootBuffer
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text9
  1455  000494                     __ptext9:
  1456                           	opt stack 0
  1457  000494                     _Write_EE_Data:
  1458                           	opt stack 23
  1459                           
  1460                           ;pic18f_bootload.c: 393: EEADR = frame.address_L;
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;incstack = 0
  1464  000494  C065  FF74         	movff	_frame+5,3956	;volatile
  1465                           
  1466                           ;pic18f_bootload.c: 394: EEADRH = frame.address_H;
  1467  000498  C066  FF75         	movff	_frame+6,3957	;volatile
  1468                           
  1469                           ;pic18f_bootload.c: 395: EECON1 = 0x04;
  1470  00049C  0E04               	movlw	4
  1471  00049E  6E7F               	movwf	3967,c	;volatile
  1472                           
  1473                           ;pic18f_bootload.c: 396: for (uint8_t i = 0; i < frame.data_length; i++)
  1474  0004A0  0E00               	movlw	0
  1475  0004A2  6E23               	movwf	Write_EE_Data@i,c
  1476  0004A4  D01A               	goto	l1597
  1477  0004A6                     l266:
  1478  0004A6  B27F               	btfsc	3967,1,c	;volatile
  1479  0004A8  D7FE               	goto	l266
  1480                           
  1481                           ;pic18f_bootload.c: 399: EEADR = frame.address_L + i;
  1482  0004AA  0100               	movlb	0	; () banked
  1483  0004AC  5165               	movf	(_frame+5)& (0+255),w,b
  1484  0004AE  2423               	addwf	Write_EE_Data@i,w,c
  1485  0004B0  6E74               	movwf	3956,c	;volatile
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;pic18f_bootload.c: 400: if (EEADR == 0x00)
  1489  0004B2  5074               	movf	3956,w,c	;volatile
  1490  0004B4  B4D8               	btfsc	status,2,c
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;pic18f_bootload.c: 401: {
  1494                           ;pic18f_bootload.c: 402: ++ EEADRH;
  1495  0004B6  2A75               	incf	3957,f,c	;volatile
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;pic18f_bootload.c: 403: }
  1499                           ;pic18f_bootload.c: 404: EEDATA = frame.data[i];
  1500                           
  1501                           ; BSR set to: 0
  1502  0004B8  5023               	movf	Write_EE_Data@i,w,c
  1503  0004BA  0D01               	mullw	1
  1504  0004BC  0E09               	movlw	9
  1505  0004BE  26F3               	addwf	prodl,f,c
  1506  0004C0  0E00               	movlw	0
  1507  0004C2  22F4               	addwfc	prodh,f,c
  1508  0004C4  0E60               	movlw	low _frame
  1509  0004C6  24F3               	addwf	prodl,w,c
  1510  0004C8  6ED9               	movwf	fsr2l,c
  1511  0004CA  0E00               	movlw	high _frame
  1512  0004CC  20F4               	addwfc	prodh,w,c
  1513  0004CE  6EDA               	movwf	fsr2h,c
  1514  0004D0  50DF               	movf	indf2,w,c
  1515  0004D2  6E73               	movwf	3955,c	;volatile
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;pic18f_bootload.c: 405: StartWrite ();
  1519  0004D4  EC9B  F003         	call	_StartWrite	;wreg free
  1520  0004D8  2A23               	incf	Write_EE_Data@i,f,c
  1521  0004DA                     l1597:
  1522  0004DA  5023               	movf	Write_EE_Data@i,w,c
  1523  0004DC  6E21               	movwf	??_Write_EE_Data& (0+255),c
  1524  0004DE  6A22               	clrf	(??_Write_EE_Data+1)& (0+255),c
  1525  0004E0  0100               	movlb	0	; () banked
  1526  0004E2  5161               	movf	(_frame+1)& (0+255),w,b
  1527  0004E4  5C21               	subwf	??_Write_EE_Data,w,c
  1528  0004E6  0100               	movlb	0	; () banked
  1529  0004E8  5162               	movf	(_frame+2)& (0+255),w,b
  1530  0004EA  5822               	subwfb	??_Write_EE_Data+1,w,c
  1531  0004EC  A0D8               	btfss	status,0,c
  1532  0004EE  D7DB               	goto	l266
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;pic18f_bootload.c: 406: }
  1536                           ;pic18f_bootload.c: 407: frame.data[0] = 0x01;
  1537                           
  1538                           ; BSR set to: 0
  1539  0004F0  0E01               	movlw	1
  1540  0004F2  0100               	movlb	0	; () banked
  1541  0004F4  6F69               	movwf	(_frame+9)& (0+255),b
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;pic18f_bootload.c: 408: return 10;
  1545  0004F6  0E0A               	movlw	10
  1546  0004F8  0012               	return	
  1547  0004FA                     __end_of_Write_EE_Data:
  1548                           	opt stack 0
  1549                           stkptr	equ	0xFFC
  1550                           pclatu	equ	0xFFB
  1551                           pclath	equ	0xFFA
  1552                           tblptru	equ	0xFF8
  1553                           tblptrh	equ	0xFF7
  1554                           tblptrl	equ	0xFF6
  1555                           tablat	equ	0xFF5
  1556                           prodh	equ	0xFF4
  1557                           prodl	equ	0xFF3
  1558                           postinc0	equ	0xFEE
  1559                           fsr0h	equ	0xFEA
  1560                           fsr0l	equ	0xFE9
  1561                           wreg	equ	0xFE8
  1562                           fsr1h	equ	0xFE2
  1563                           fsr1l	equ	0xFE1
  1564                           indf2	equ	0xFDF
  1565                           postinc2	equ	0xFDE
  1566                           postdec2	equ	0xFDD
  1567                           fsr2h	equ	0xFDA
  1568                           fsr2l	equ	0xFD9
  1569                           status	equ	0xFD8
  1570                           
  1571 ;; *************** function _Write_Config *****************
  1572 ;; Defined at:
  1573 ;;		line 437 in file "mcc_generated_files/pic18f_bootload.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  i               1   33[COMRAM] unsigned char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      unsigned char 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;Total ram usage:        3 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    3
  1594 ;; This function calls:
  1595 ;;		_StartWrite
  1596 ;; This function is called by:
  1597 ;;		_ProcessBootBuffer
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text10
  1602  0003B2                     __ptext10:
  1603                           	opt stack 0
  1604  0003B2                     _Write_Config:
  1605                           	opt stack 23
  1606                           
  1607                           ;pic18f_bootload.c: 439: TBLPTRL = frame.address_L;
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;incstack = 0
  1611  0003B2  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  1612                           
  1613                           ;pic18f_bootload.c: 440: TBLPTRH = frame.address_H;
  1614  0003B6  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  1615                           
  1616                           ;pic18f_bootload.c: 441: TBLPTRU = frame.address_U;
  1617  0003BA  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  1618                           
  1619                           ;pic18f_bootload.c: 442: if (TBLPTR > 0x20000F)
  1620  0003BE  0E10               	movlw	16
  1621  0003C0  5CF6               	subwf	tblptrl,w,c	;volatile
  1622  0003C2  0E00               	movlw	0
  1623  0003C4  58F7               	subwfb	tblptrh,w,c	;volatile
  1624  0003C6  0E20               	movlw	32
  1625  0003C8  58F8               	subwfb	tblptru,w,c	;volatile
  1626  0003CA  A0D8               	btfss	status,0,c
  1627  0003CC  D002               	goto	l1625
  1628                           
  1629                           ;pic18f_bootload.c: 443: EECON1 = 0xC4;
  1630  0003CE  0EC4               	movlw	196
  1631  0003D0  D001               	goto	L12
  1632  0003D2                     l1625:
  1633                           
  1634                           ;pic18f_bootload.c: 444: else
  1635                           ;pic18f_bootload.c: 445: EECON1 = 0x84;
  1636  0003D2  0E84               	movlw	132
  1637  0003D4                     L12:
  1638  0003D4  6E7F               	movwf	3967,c	;volatile
  1639                           
  1640                           ;pic18f_bootload.c: 446: for (uint8_t i= 0; i < frame.data_length; i ++)
  1641  0003D6  0E00               	movlw	0
  1642  0003D8  6E23               	movwf	Write_Config@i,c
  1643  0003DA  D013               	goto	l1635
  1644  0003DC                     l1627:
  1645                           
  1646                           ;pic18f_bootload.c: 447: {
  1647                           ;pic18f_bootload.c: 448: TABLAT = frame.data[i];
  1648  0003DC  5023               	movf	Write_Config@i,w,c
  1649  0003DE  0D01               	mullw	1
  1650  0003E0  0E09               	movlw	9
  1651  0003E2  26F3               	addwf	prodl,f,c
  1652  0003E4  0E00               	movlw	0
  1653  0003E6  22F4               	addwfc	prodh,f,c
  1654  0003E8  0E60               	movlw	low _frame
  1655  0003EA  24F3               	addwf	prodl,w,c
  1656  0003EC  6ED9               	movwf	fsr2l,c
  1657  0003EE  0E00               	movlw	high _frame
  1658  0003F0  20F4               	addwfc	prodh,w,c
  1659  0003F2  6EDA               	movwf	fsr2h,c
  1660  0003F4  50DF               	movf	indf2,w,c
  1661  0003F6  6EF5               	movwf	tablat,c	;volatile
  1662  0003F8  000C               	tblwt		*	;# 
  1663                           
  1664                           ;pic18f_bootload.c: 450: StartWrite();
  1665  0003FA  EC9B  F003         	call	_StartWrite	;wreg free
  1666                           
  1667                           ;pic18f_bootload.c: 451: ++ TBLPTRL;
  1668  0003FE  2AF6               	incf	tblptrl,f,c	;volatile
  1669  000400  2A23               	incf	Write_Config@i,f,c
  1670  000402                     l1635:
  1671  000402  5023               	movf	Write_Config@i,w,c
  1672  000404  6E21               	movwf	??_Write_Config& (0+255),c
  1673  000406  6A22               	clrf	(??_Write_Config+1)& (0+255),c
  1674  000408  0100               	movlb	0	; () banked
  1675  00040A  5161               	movf	(_frame+1)& (0+255),w,b
  1676  00040C  5C21               	subwf	??_Write_Config,w,c
  1677  00040E  0100               	movlb	0	; () banked
  1678  000410  5162               	movf	(_frame+2)& (0+255),w,b
  1679  000412  5822               	subwfb	??_Write_Config+1,w,c
  1680  000414  A0D8               	btfss	status,0,c
  1681  000416  D7E2               	goto	l1627
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;pic18f_bootload.c: 452: }
  1685                           ;pic18f_bootload.c: 453: frame.data[0] = 0x01;
  1686                           
  1687                           ; BSR set to: 0
  1688  000418  0E01               	movlw	1
  1689  00041A  0100               	movlb	0	; () banked
  1690  00041C  6F69               	movwf	(_frame+9)& (0+255),b
  1691                           
  1692                           ;pic18f_bootload.c: 454: EE_Key_1 = 0x00;
  1693  00041E  0E00               	movlw	0
  1694  000420  6E00               	movwf	0,c
  1695                           
  1696                           ;pic18f_bootload.c: 455: EE_Key_2 = 0x00;
  1697  000422  0E00               	movlw	0
  1698  000424  6E01               	movwf	1,c
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;pic18f_bootload.c: 456: return (10);
  1702  000426  0E0A               	movlw	10
  1703  000428  0012               	return	
  1704  00042A                     __end_of_Write_Config:
  1705                           	opt stack 0
  1706                           stkptr	equ	0xFFC
  1707                           pclatu	equ	0xFFB
  1708                           pclath	equ	0xFFA
  1709                           tblptru	equ	0xFF8
  1710                           tblptrh	equ	0xFF7
  1711                           tblptrl	equ	0xFF6
  1712                           tablat	equ	0xFF5
  1713                           prodh	equ	0xFF4
  1714                           prodl	equ	0xFF3
  1715                           postinc0	equ	0xFEE
  1716                           fsr0h	equ	0xFEA
  1717                           fsr0l	equ	0xFE9
  1718                           wreg	equ	0xFE8
  1719                           fsr1h	equ	0xFE2
  1720                           fsr1l	equ	0xFE1
  1721                           indf2	equ	0xFDF
  1722                           postinc2	equ	0xFDE
  1723                           postdec2	equ	0xFDD
  1724                           fsr2h	equ	0xFDA
  1725                           fsr2l	equ	0xFD9
  1726                           status	equ	0xFD8
  1727                           
  1728 ;; *************** function _Read_Flash *****************
  1729 ;; Defined at:
  1730 ;;		line 283 in file "mcc_generated_files/pic18f_bootload.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  i               1   33[COMRAM] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      unsigned char 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1746 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1747 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1748 ;;Total ram usage:        3 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    2
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_ProcessBootBuffer
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text11
  1759  000552                     __ptext11:
  1760                           	opt stack 0
  1761  000552                     _Read_Flash:
  1762                           	opt stack 24
  1763                           
  1764                           ;pic18f_bootload.c: 285: TBLPTRL = frame.address_L;
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;incstack = 0
  1768  000552  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  1769                           
  1770                           ;pic18f_bootload.c: 286: TBLPTRH = frame.address_H;
  1771  000556  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  1772                           
  1773                           ;pic18f_bootload.c: 287: TBLPTRU = frame.address_U;
  1774  00055A  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  1775                           
  1776                           ;pic18f_bootload.c: 288: EECON1 = 0x80;
  1777  00055E  0E80               	movlw	128
  1778  000560  6E7F               	movwf	3967,c	;volatile
  1779                           
  1780                           ;pic18f_bootload.c: 289: for (uint8_t i = 0; i < frame.data_length; i ++)
  1781  000562  0E00               	movlw	0
  1782  000564  6E23               	movwf	Read_Flash@i,c
  1783  000566  D010               	goto	l1501
  1784  000568                     l236:
  1785                           
  1786                           ; BSR set to: 0
  1787  000568  0009               	tblrd		*+	;# 
  1788                           
  1789                           ;pic18f_bootload.c: 292: frame.data[i] = TABLAT;
  1790  00056A  5023               	movf	Read_Flash@i,w,c
  1791  00056C  0D01               	mullw	1
  1792  00056E  0E09               	movlw	9
  1793  000570  26F3               	addwf	prodl,f,c
  1794  000572  0E00               	movlw	0
  1795  000574  22F4               	addwfc	prodh,f,c
  1796  000576  0E60               	movlw	low _frame
  1797  000578  24F3               	addwf	prodl,w,c
  1798  00057A  6ED9               	movwf	fsr2l,c
  1799  00057C  0E00               	movlw	high _frame
  1800  00057E  20F4               	addwfc	prodh,w,c
  1801  000580  6EDA               	movwf	fsr2h,c
  1802  000582  CFF5 FFDF          	movff	tablat,indf2	;volatile
  1803  000586  2A23               	incf	Read_Flash@i,f,c
  1804  000588                     l1501:
  1805  000588  5023               	movf	Read_Flash@i,w,c
  1806  00058A  6E21               	movwf	??_Read_Flash& (0+255),c
  1807  00058C  6A22               	clrf	(??_Read_Flash+1)& (0+255),c
  1808  00058E  0100               	movlb	0	; () banked
  1809  000590  5161               	movf	(_frame+1)& (0+255),w,b
  1810  000592  5C21               	subwf	??_Read_Flash,w,c
  1811  000594  0100               	movlb	0	; () banked
  1812  000596  5162               	movf	(_frame+2)& (0+255),w,b
  1813  000598  5822               	subwfb	??_Read_Flash+1,w,c
  1814  00059A  A0D8               	btfss	status,0,c
  1815  00059C  D7E5               	goto	l236
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;pic18f_bootload.c: 293: }
  1819                           ;pic18f_bootload.c: 295: return (frame.data_length + 9);
  1820                           
  1821                           ; BSR set to: 0
  1822  00059E  0100               	movlb	0	; () banked
  1823  0005A0  5161               	movf	(_frame+1)& (0+255),w,b
  1824  0005A2  0F09               	addlw	9
  1825  0005A4  0012               	return	
  1826  0005A6                     __end_of_Read_Flash:
  1827                           	opt stack 0
  1828                           stkptr	equ	0xFFC
  1829                           pclatu	equ	0xFFB
  1830                           pclath	equ	0xFFA
  1831                           tblptru	equ	0xFF8
  1832                           tblptrh	equ	0xFF7
  1833                           tblptrl	equ	0xFF6
  1834                           tablat	equ	0xFF5
  1835                           prodh	equ	0xFF4
  1836                           prodl	equ	0xFF3
  1837                           postinc0	equ	0xFEE
  1838                           fsr0h	equ	0xFEA
  1839                           fsr0l	equ	0xFE9
  1840                           wreg	equ	0xFE8
  1841                           fsr1h	equ	0xFE2
  1842                           fsr1l	equ	0xFE1
  1843                           indf2	equ	0xFDF
  1844                           postinc2	equ	0xFDE
  1845                           postdec2	equ	0xFDD
  1846                           fsr2h	equ	0xFDA
  1847                           fsr2l	equ	0xFD9
  1848                           status	equ	0xFD8
  1849                           
  1850 ;; *************** function _Read_EE_Data *****************
  1851 ;; Defined at:
  1852 ;;		line 371 in file "mcc_generated_files/pic18f_bootload.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  i               1   33[COMRAM] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      unsigned char 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1869 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;Total ram usage:        3 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    2
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_ProcessBootBuffer
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text12
  1881  0005FA                     __ptext12:
  1882                           	opt stack 0
  1883  0005FA                     _Read_EE_Data:
  1884                           	opt stack 24
  1885                           
  1886                           ;pic18f_bootload.c: 373: EEADR = frame.address_L;
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;incstack = 0
  1890  0005FA  C065  FF74         	movff	_frame+5,3956	;volatile
  1891                           
  1892                           ;pic18f_bootload.c: 374: EEADRH = frame.address_H;
  1893  0005FE  C066  FF75         	movff	_frame+6,3957	;volatile
  1894                           
  1895                           ;pic18f_bootload.c: 375: EECON1 = 0;
  1896  000602  0E00               	movlw	0
  1897  000604  6E7F               	movwf	3967,c	;volatile
  1898                           
  1899                           ;pic18f_bootload.c: 376: for (uint8_t i = 0; i < frame.data_length; i++)
  1900  000606  0E00               	movlw	0
  1901  000608  6E23               	movwf	Read_EE_Data@i,c
  1902  00060A  D011               	goto	l1575
  1903  00060C                     l259:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;pic18f_bootload.c: 377: {
  1907                           ;pic18f_bootload.c: 378: EECON1bits.RD = 1;
  1908  00060C  807F               	bsf	3967,0,c	;volatile
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;pic18f_bootload.c: 379: frame.data[i] = EEDATA;
  1912  00060E  5023               	movf	Read_EE_Data@i,w,c
  1913  000610  0D01               	mullw	1
  1914  000612  0E09               	movlw	9
  1915  000614  26F3               	addwf	prodl,f,c
  1916  000616  0E00               	movlw	0
  1917  000618  22F4               	addwfc	prodh,f,c
  1918  00061A  0E60               	movlw	low _frame
  1919  00061C  24F3               	addwf	prodl,w,c
  1920  00061E  6ED9               	movwf	fsr2l,c
  1921  000620  0E00               	movlw	high _frame
  1922  000622  20F4               	addwfc	prodh,w,c
  1923  000624  6EDA               	movwf	fsr2h,c
  1924  000626  CF73 FFDF          	movff	3955,indf2	;volatile
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;pic18f_bootload.c: 380: ++ EEADR;
  1928  00062A  2A74               	incf	3956,f,c	;volatile
  1929                           
  1930                           ; BSR set to: 0
  1931  00062C  2A23               	incf	Read_EE_Data@i,f,c
  1932  00062E                     l1575:
  1933  00062E  5023               	movf	Read_EE_Data@i,w,c
  1934  000630  6E21               	movwf	??_Read_EE_Data& (0+255),c
  1935  000632  6A22               	clrf	(??_Read_EE_Data+1)& (0+255),c
  1936  000634  0100               	movlb	0	; () banked
  1937  000636  5161               	movf	(_frame+1)& (0+255),w,b
  1938  000638  5C21               	subwf	??_Read_EE_Data,w,c
  1939  00063A  0100               	movlb	0	; () banked
  1940  00063C  5162               	movf	(_frame+2)& (0+255),w,b
  1941  00063E  5822               	subwfb	??_Read_EE_Data+1,w,c
  1942  000640  A0D8               	btfss	status,0,c
  1943  000642  D7E4               	goto	l259
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;pic18f_bootload.c: 381: }
  1947                           ;pic18f_bootload.c: 382: return (frame.data_length+9);
  1948                           
  1949                           ; BSR set to: 0
  1950  000644  0100               	movlb	0	; () banked
  1951  000646  5161               	movf	(_frame+1)& (0+255),w,b
  1952  000648  0F09               	addlw	9
  1953  00064A  0012               	return	
  1954  00064C                     __end_of_Read_EE_Data:
  1955                           	opt stack 0
  1956                           stkptr	equ	0xFFC
  1957                           pclatu	equ	0xFFB
  1958                           pclath	equ	0xFFA
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           prodh	equ	0xFF4
  1964                           prodl	equ	0xFF3
  1965                           postinc0	equ	0xFEE
  1966                           fsr0h	equ	0xFEA
  1967                           fsr0l	equ	0xFE9
  1968                           wreg	equ	0xFE8
  1969                           fsr1h	equ	0xFE2
  1970                           fsr1l	equ	0xFE1
  1971                           indf2	equ	0xFDF
  1972                           postinc2	equ	0xFDE
  1973                           postdec2	equ	0xFDD
  1974                           fsr2h	equ	0xFDA
  1975                           fsr2l	equ	0xFD9
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function _Read_Config *****************
  1979 ;; Defined at:
  1980 ;;		line 417 in file "mcc_generated_files/pic18f_bootload.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  i               1   33[COMRAM] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      unsigned char 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1997 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1998 ;;Total ram usage:        3 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    2
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_ProcessBootBuffer
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text13
  2009  0005A6                     __ptext13:
  2010                           	opt stack 0
  2011  0005A6                     _Read_Config:
  2012                           	opt stack 24
  2013                           
  2014                           ;pic18f_bootload.c: 419: TBLPTRL = frame.address_L;
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;incstack = 0
  2018  0005A6  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  2019                           
  2020                           ;pic18f_bootload.c: 420: TBLPTRH = frame.address_H;
  2021  0005AA  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  2022                           
  2023                           ;pic18f_bootload.c: 421: TBLPTRU = frame.address_U;
  2024  0005AE  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  2025                           
  2026                           ;pic18f_bootload.c: 422: EECON1 = 0xC0;
  2027  0005B2  0EC0               	movlw	192
  2028  0005B4  6E7F               	movwf	3967,c	;volatile
  2029                           
  2030                           ;pic18f_bootload.c: 423: for (uint8_t i = 0; i < frame.data_length; i++)
  2031  0005B6  0E00               	movlw	0
  2032  0005B8  6E23               	movwf	Read_Config@i,c
  2033  0005BA  D010               	goto	l1613
  2034  0005BC                     l275:
  2035                           
  2036                           ; BSR set to: 0
  2037  0005BC  0009               	tblrd		*+	;# 
  2038                           
  2039                           ;pic18f_bootload.c: 426: frame.data[i] = TABLAT;
  2040  0005BE  5023               	movf	Read_Config@i,w,c
  2041  0005C0  0D01               	mullw	1
  2042  0005C2  0E09               	movlw	9
  2043  0005C4  26F3               	addwf	prodl,f,c
  2044  0005C6  0E00               	movlw	0
  2045  0005C8  22F4               	addwfc	prodh,f,c
  2046  0005CA  0E60               	movlw	low _frame
  2047  0005CC  24F3               	addwf	prodl,w,c
  2048  0005CE  6ED9               	movwf	fsr2l,c
  2049  0005D0  0E00               	movlw	high _frame
  2050  0005D2  20F4               	addwfc	prodh,w,c
  2051  0005D4  6EDA               	movwf	fsr2h,c
  2052  0005D6  CFF5 FFDF          	movff	tablat,indf2	;volatile
  2053  0005DA  2A23               	incf	Read_Config@i,f,c
  2054  0005DC                     l1613:
  2055  0005DC  5023               	movf	Read_Config@i,w,c
  2056  0005DE  6E21               	movwf	??_Read_Config& (0+255),c
  2057  0005E0  6A22               	clrf	(??_Read_Config+1)& (0+255),c
  2058  0005E2  0100               	movlb	0	; () banked
  2059  0005E4  5161               	movf	(_frame+1)& (0+255),w,b
  2060  0005E6  5C21               	subwf	??_Read_Config,w,c
  2061  0005E8  0100               	movlb	0	; () banked
  2062  0005EA  5162               	movf	(_frame+2)& (0+255),w,b
  2063  0005EC  5822               	subwfb	??_Read_Config+1,w,c
  2064  0005EE  A0D8               	btfss	status,0,c
  2065  0005F0  D7E5               	goto	l275
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;pic18f_bootload.c: 427: }
  2069                           ;pic18f_bootload.c: 428: return (9 + frame.data_length);
  2070                           
  2071                           ; BSR set to: 0
  2072  0005F2  0100               	movlb	0	; () banked
  2073  0005F4  5161               	movf	(_frame+1)& (0+255),w,b
  2074  0005F6  0F09               	addlw	9
  2075  0005F8  0012               	return	
  2076  0005FA                     __end_of_Read_Config:
  2077                           	opt stack 0
  2078                           stkptr	equ	0xFFC
  2079                           pclatu	equ	0xFFB
  2080                           pclath	equ	0xFFA
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           prodh	equ	0xFF4
  2086                           prodl	equ	0xFF3
  2087                           postinc0	equ	0xFEE
  2088                           fsr0h	equ	0xFEA
  2089                           fsr0l	equ	0xFE9
  2090                           wreg	equ	0xFE8
  2091                           fsr1h	equ	0xFE2
  2092                           fsr1l	equ	0xFE1
  2093                           indf2	equ	0xFDF
  2094                           postinc2	equ	0xFDE
  2095                           postdec2	equ	0xFDD
  2096                           fsr2h	equ	0xFDA
  2097                           fsr2l	equ	0xFD9
  2098                           status	equ	0xFD8
  2099                           
  2100 ;; *************** function _Get_Version_Data *****************
  2101 ;; Defined at:
  2102 ;;		line 242 in file "mcc_generated_files/pic18f_bootload.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  i               1   31[COMRAM] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      unsigned char 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2120 ;;Total ram usage:        1 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    2
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_ProcessBootBuffer
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text14
  2131  0002A6                     __ptext14:
  2132                           	opt stack 0
  2133  0002A6                     _Get_Version_Data:
  2134                           	opt stack 24
  2135                           
  2136                           ;pic18f_bootload.c: 244: frame.data[0] = 0x19;
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;incstack = 0
  2140  0002A6  0E19               	movlw	25
  2141  0002A8  0100               	movlb	0	; () banked
  2142  0002AA  6F69               	movwf	(_frame+9)& (0+255),b
  2143                           
  2144                           ;pic18f_bootload.c: 245: frame.data[1] = 0x00;
  2145  0002AC  0E00               	movlw	0
  2146  0002AE  0100               	movlb	0	; () banked
  2147  0002B0  6F6A               	movwf	(_frame+10)& (0+255),b
  2148                           
  2149                           ;pic18f_bootload.c: 246: frame.data[2] = 0;
  2150  0002B2  0E00               	movlw	0
  2151  0002B4  0100               	movlb	0	; () banked
  2152  0002B6  6F6B               	movwf	(_frame+11)& (0+255),b
  2153                           
  2154                           ;pic18f_bootload.c: 247: frame.data[3] = 1;
  2155  0002B8  0E01               	movlw	1
  2156  0002BA  0100               	movlb	0	; () banked
  2157  0002BC  6F6C               	movwf	(_frame+12)& (0+255),b
  2158                           
  2159                           ;pic18f_bootload.c: 248: frame.data[4] = 0;
  2160  0002BE  0E00               	movlw	0
  2161  0002C0  0100               	movlb	0	; () banked
  2162  0002C2  6F6D               	movwf	(_frame+13)& (0+255),b
  2163                           
  2164                           ;pic18f_bootload.c: 249: frame.data[5] = 0;
  2165  0002C4  0E00               	movlw	0
  2166  0002C6  0100               	movlb	0	; () banked
  2167  0002C8  6F6E               	movwf	(_frame+14)& (0+255),b
  2168                           
  2169                           ;pic18f_bootload.c: 250: TBLPTRU = 0x3F;
  2170  0002CA  0E3F               	movlw	63
  2171  0002CC  6EF8               	movwf	tblptru,c	;volatile
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;pic18f_bootload.c: 251: TBLPTRH = 0xFF;
  2175  0002CE  68F7               	setf	tblptrh,c	;volatile
  2176                           
  2177                           ;pic18f_bootload.c: 252: TBLPTRL = 0xFE;
  2178  0002D0  0EFE               	movlw	254
  2179  0002D2  6EF6               	movwf	tblptrl,c	;volatile
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;pic18f_bootload.c: 253: EECON1bits.CFGS = 1;
  2183  0002D4  8C7F               	bsf	3967,6,c	;volatile
  2184  0002D6  0009               	tblrd		*+	;# 
  2185                           
  2186                           ;pic18f_bootload.c: 255: frame.data[6] = TABLAT;
  2187  0002D8  CFF5 F06F          	movff	tablat,_frame+15	;volatile
  2188  0002DC  0009               	tblrd		*+	;# 
  2189                           
  2190                           ;pic18f_bootload.c: 257: frame.data[7] = TABLAT;
  2191  0002DE  CFF5 F070          	movff	tablat,_frame+16	;volatile
  2192                           
  2193                           ;pic18f_bootload.c: 258: frame.data[8] = 0;
  2194  0002E2  0E00               	movlw	0
  2195  0002E4  0100               	movlb	0	; () banked
  2196  0002E6  6F71               	movwf	(_frame+17)& (0+255),b
  2197                           
  2198                           ;pic18f_bootload.c: 259: frame.data[9] = 0;
  2199  0002E8  0E00               	movlw	0
  2200  0002EA  0100               	movlb	0	; () banked
  2201  0002EC  6F72               	movwf	(_frame+18)& (0+255),b
  2202                           
  2203                           ;pic18f_bootload.c: 261: frame.data[10] = 64;
  2204  0002EE  0E40               	movlw	64
  2205  0002F0  0100               	movlb	0	; () banked
  2206  0002F2  6F73               	movwf	(_frame+19)& (0+255),b
  2207                           
  2208                           ;pic18f_bootload.c: 262: frame.data[11] = 64;
  2209  0002F4  0E40               	movlw	64
  2210  0002F6  0100               	movlb	0	; () banked
  2211  0002F8  6F74               	movwf	(_frame+20)& (0+255),b
  2212                           
  2213                           ;pic18f_bootload.c: 264: TBLPTRU = 0x30;
  2214  0002FA  0E30               	movlw	48
  2215  0002FC  6EF8               	movwf	tblptru,c	;volatile
  2216                           
  2217                           ;pic18f_bootload.c: 265: TBLPTRH = 0x00;
  2218  0002FE  0E00               	movlw	0
  2219  000300  6EF7               	movwf	tblptrh,c	;volatile
  2220                           
  2221                           ;pic18f_bootload.c: 266: TBLPTRL = 0x00;
  2222  000302  0E00               	movlw	0
  2223  000304  6EF6               	movwf	tblptrl,c	;volatile
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;pic18f_bootload.c: 267: EECON1bits.CFGS = 1;
  2227  000306  8C7F               	bsf	3967,6,c	;volatile
  2228                           
  2229                           ;pic18f_bootload.c: 268: for (uint8_t i= 12; i < 16; i++)
  2230  000308  0E0C               	movlw	12
  2231  00030A  6E21               	movwf	Get_Version_Data@i,c
  2232  00030C                     l1479:
  2233                           
  2234                           ; BSR set to: 0
  2235  00030C  0E0F               	movlw	15
  2236  00030E  6421               	cpfsgt	Get_Version_Data@i,c
  2237  000310  D001               	goto	l230
  2238  000312  D011               	goto	l1489
  2239  000314                     l230:
  2240  000314  0009               	tblrd		*+	;# 
  2241                           
  2242                           ;pic18f_bootload.c: 271: frame.data[i] = TABLAT;
  2243  000316  5021               	movf	Get_Version_Data@i,w,c
  2244  000318  0D01               	mullw	1
  2245  00031A  0E09               	movlw	9
  2246  00031C  26F3               	addwf	prodl,f,c
  2247  00031E  0E00               	movlw	0
  2248  000320  22F4               	addwfc	prodh,f,c
  2249  000322  0E60               	movlw	low _frame
  2250  000324  24F3               	addwf	prodl,w,c
  2251  000326  6ED9               	movwf	fsr2l,c
  2252  000328  0E00               	movlw	high _frame
  2253  00032A  20F4               	addwfc	prodh,w,c
  2254  00032C  6EDA               	movwf	fsr2h,c
  2255  00032E  CFF5 FFDF          	movff	tablat,indf2	;volatile
  2256  000332  2A21               	incf	Get_Version_Data@i,f,c
  2257  000334  D7EB               	goto	l1479
  2258  000336                     l1489:
  2259                           
  2260                           ;pic18f_bootload.c: 272: }
  2261                           ;pic18f_bootload.c: 274: return 25;
  2262  000336  0E19               	movlw	25
  2263  000338  0012               	return	
  2264  00033A                     __end_of_Get_Version_Data:
  2265                           	opt stack 0
  2266                           stkptr	equ	0xFFC
  2267                           pclatu	equ	0xFFB
  2268                           pclath	equ	0xFFA
  2269                           tblptru	equ	0xFF8
  2270                           tblptrh	equ	0xFF7
  2271                           tblptrl	equ	0xFF6
  2272                           tablat	equ	0xFF5
  2273                           prodh	equ	0xFF4
  2274                           prodl	equ	0xFF3
  2275                           postinc0	equ	0xFEE
  2276                           fsr0h	equ	0xFEA
  2277                           fsr0l	equ	0xFE9
  2278                           wreg	equ	0xFE8
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           indf2	equ	0xFDF
  2282                           postinc2	equ	0xFDE
  2283                           postdec2	equ	0xFDD
  2284                           fsr2h	equ	0xFDA
  2285                           fsr2l	equ	0xFD9
  2286                           status	equ	0xFD8
  2287                           
  2288 ;; *************** function _Erase_Flash *****************
  2289 ;; Defined at:
  2290 ;;		line 341 in file "mcc_generated_files/pic18f_bootload.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  i               2   31[COMRAM] unsigned int 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      unsigned char 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2308 ;;Total ram usage:        2 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    3
  2311 ;; This function calls:
  2312 ;;		_StartWrite
  2313 ;; This function is called by:
  2314 ;;		_ProcessBootBuffer
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text15
  2319  00042A                     __ptext15:
  2320                           	opt stack 0
  2321  00042A                     _Erase_Flash:
  2322                           	opt stack 23
  2323                           
  2324                           ;pic18f_bootload.c: 343: TBLPTRL = frame.address_L;
  2325                           
  2326                           ;incstack = 0
  2327  00042A  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  2328                           
  2329                           ;pic18f_bootload.c: 344: TBLPTRH = frame.address_H;
  2330  00042E  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  2331                           
  2332                           ;pic18f_bootload.c: 345: TBLPTRU = frame.address_U;
  2333  000432  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  2334                           
  2335                           ;pic18f_bootload.c: 346: for (uint16_t i=0; i < frame.data_length; i++)
  2336  000436  0E00               	movlw	0
  2337  000438  6E22               	movwf	Erase_Flash@i+1,c
  2338  00043A  0E00               	movlw	0
  2339  00043C  6E21               	movwf	Erase_Flash@i,c
  2340  00043E  D017               	goto	l1557
  2341  000440                     l1541:
  2342                           
  2343                           ;pic18f_bootload.c: 347: {
  2344                           ;pic18f_bootload.c: 348: if (TBLPTR >= 32768)
  2345  000440  50F8               	movf	tblptru,w,c	;volatile
  2346  000442  E104               	bnz	u530
  2347  000444  0E80               	movlw	128
  2348  000446  5CF7               	subwf	tblptrh,w,c	;volatile
  2349  000448  A0D8               	btfss	status,0,c
  2350  00044A  D005               	goto	l1549
  2351  00044C                     u530:
  2352                           
  2353                           ;pic18f_bootload.c: 349: {
  2354                           ;pic18f_bootload.c: 350: frame.data[0] = 0xFE;
  2355  00044C  0EFE               	movlw	254
  2356  00044E  0100               	movlb	0	; () banked
  2357  000450  6F69               	movwf	(_frame+9)& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;pic18f_bootload.c: 351: return (10);
  2361  000452  0E0A               	movlw	10
  2362                           
  2363                           ; BSR set to: 0
  2364  000454  0012               	return	
  2365  000456                     l1549:
  2366                           
  2367                           ;pic18f_bootload.c: 352: }
  2368                           ;pic18f_bootload.c: 353: EECON1 = 0x94;
  2369  000456  0E94               	movlw	148
  2370  000458  6E7F               	movwf	3967,c	;volatile
  2371                           
  2372                           ;pic18f_bootload.c: 354: StartWrite();
  2373  00045A  EC9B  F003         	call	_StartWrite	;wreg free
  2374                           
  2375                           ;pic18f_bootload.c: 355: TBLPTR += 64;
  2376  00045E  0E40               	movlw	64
  2377  000460  26F6               	addwf	tblptrl,f,c	;volatile
  2378  000462  0E00               	movlw	0
  2379  000464  22F7               	addwfc	tblptrh,f,c	;volatile
  2380  000466  0E00               	movlw	0
  2381  000468  22F8               	addwfc	tblptru,f,c	;volatile
  2382  00046A  4A21               	infsnz	Erase_Flash@i,f,c
  2383  00046C  2A22               	incf	Erase_Flash@i+1,f,c
  2384  00046E                     l1557:
  2385  00046E  0100               	movlb	0	; () banked
  2386  000470  5161               	movf	(_frame+1)& (0+255),w,b
  2387  000472  5C21               	subwf	Erase_Flash@i,w,c
  2388  000474  0100               	movlb	0	; () banked
  2389  000476  5162               	movf	(_frame+2)& (0+255),w,b
  2390  000478  5822               	subwfb	Erase_Flash@i+1,w,c
  2391  00047A  A0D8               	btfss	status,0,c
  2392  00047C  D7E1               	goto	l1541
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;pic18f_bootload.c: 356: }
  2396                           ;pic18f_bootload.c: 357: frame.data[0] = 0x01;
  2397                           
  2398                           ; BSR set to: 0
  2399  00047E  0E01               	movlw	1
  2400  000480  0100               	movlb	0	; () banked
  2401  000482  6F69               	movwf	(_frame+9)& (0+255),b
  2402                           
  2403                           ;pic18f_bootload.c: 358: frame.EE_key_1 = 0x00;
  2404  000484  0E00               	movlw	0
  2405  000486  0100               	movlb	0	; () banked
  2406  000488  6F63               	movwf	(_frame+3)& (0+255),b
  2407                           
  2408                           ;pic18f_bootload.c: 359: frame.EE_key_2 = 0x00;
  2409  00048A  0E00               	movlw	0
  2410  00048C  0100               	movlb	0	; () banked
  2411  00048E  6F64               	movwf	(_frame+4)& (0+255),b
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;pic18f_bootload.c: 360: return (10);
  2415  000490  0E0A               	movlw	10
  2416  000492  0012               	return	
  2417  000494                     __end_of_Erase_Flash:
  2418                           	opt stack 0
  2419                           stkptr	equ	0xFFC
  2420                           pclatu	equ	0xFFB
  2421                           pclath	equ	0xFFA
  2422                           tblptru	equ	0xFF8
  2423                           tblptrh	equ	0xFF7
  2424                           tblptrl	equ	0xFF6
  2425                           tablat	equ	0xFF5
  2426                           prodh	equ	0xFF4
  2427                           prodl	equ	0xFF3
  2428                           postinc0	equ	0xFEE
  2429                           fsr0h	equ	0xFEA
  2430                           fsr0l	equ	0xFE9
  2431                           wreg	equ	0xFE8
  2432                           fsr1h	equ	0xFE2
  2433                           fsr1l	equ	0xFE1
  2434                           indf2	equ	0xFDF
  2435                           postinc2	equ	0xFDE
  2436                           postdec2	equ	0xFDD
  2437                           fsr2h	equ	0xFDA
  2438                           fsr2l	equ	0xFD9
  2439                           status	equ	0xFD8
  2440                           
  2441 ;; *************** function _StartWrite *****************
  2442 ;; Defined at:
  2443 ;;		line 490 in file "mcc_generated_files/pic18f_bootload.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		None
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2461 ;;Total ram usage:        0 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    2
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_Write_Flash
  2468 ;;		_Erase_Flash
  2469 ;;		_Write_EE_Data
  2470 ;;		_Write_Config
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text16
  2475  000736                     __ptext16:
  2476                           	opt stack 0
  2477  000736                     _StartWrite:
  2478                           	opt stack 23
  2479                           
  2480                           ;pic18f_bootload.c: 492: EECON2 = EE_Key_1;
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;incstack = 0
  2484  000736  C000 FF7E          	movff	0,3966	;volatile
  2485                           
  2486                           ;pic18f_bootload.c: 493: EECON2 = EE_Key_2;
  2487  00073A  C001 FF7E          	movff	1,3966	;volatile
  2488                           
  2489                           ;pic18f_bootload.c: 494: EECON1bits.WR = 1;
  2490  00073E  827F               	bsf	3967,1,c	;volatile
  2491                           
  2492                           ;pic18f_bootload.c: 495: return;
  2493  000740  0012               	return		;funcret
  2494  000742                     __end_of_StartWrite:
  2495                           	opt stack 0
  2496                           stkptr	equ	0xFFC
  2497                           pclatu	equ	0xFFB
  2498                           pclath	equ	0xFFA
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           prodh	equ	0xFF4
  2504                           prodl	equ	0xFF3
  2505                           postinc0	equ	0xFEE
  2506                           fsr0h	equ	0xFEA
  2507                           fsr0l	equ	0xFE9
  2508                           wreg	equ	0xFE8
  2509                           fsr1h	equ	0xFE2
  2510                           fsr1l	equ	0xFE1
  2511                           indf2	equ	0xFDF
  2512                           postinc2	equ	0xFDE
  2513                           postdec2	equ	0xFDD
  2514                           fsr2h	equ	0xFDA
  2515                           fsr2l	equ	0xFD9
  2516                           status	equ	0xFD8
  2517                           
  2518 ;; *************** function _Calc_Checksum *****************
  2519 ;; Defined at:
  2520 ;;		line 467 in file "mcc_generated_files/pic18f_bootload.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  i               2   31[COMRAM] unsigned int 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      unsigned char 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2538 ;;Total ram usage:        2 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    2
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_ProcessBootBuffer
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text17
  2549  0004FA                     __ptext17:
  2550                           	opt stack 0
  2551  0004FA                     _Calc_Checksum:
  2552                           	opt stack 24
  2553                           
  2554                           ;pic18f_bootload.c: 469: TBLPTRL = frame.address_L;
  2555                           
  2556                           ;incstack = 0
  2557  0004FA  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  2558                           
  2559                           ;pic18f_bootload.c: 470: TBLPTRH = frame.address_H;
  2560  0004FE  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  2561                           
  2562                           ;pic18f_bootload.c: 471: TBLPTRU = frame.address_U;
  2563  000502  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  2564                           
  2565                           ;pic18f_bootload.c: 472: EECON1 = 0x80;
  2566  000506  0E80               	movlw	128
  2567  000508  6E7F               	movwf	3967,c	;volatile
  2568                           
  2569                           ;pic18f_bootload.c: 473: check_sum = 0;
  2570  00050A  0E00               	movlw	0
  2571  00050C  6E2F               	movwf	_check_sum+1,c
  2572  00050E  0E00               	movlw	0
  2573  000510  6E2E               	movwf	_check_sum,c
  2574                           
  2575                           ;pic18f_bootload.c: 474: for (uint16_t i = 0;i < frame.data_length; i += 2)
  2576  000512  0E00               	movlw	0
  2577  000514  6E22               	movwf	Calc_Checksum@i+1,c
  2578  000516  0E00               	movlw	0
  2579  000518  6E21               	movwf	Calc_Checksum@i,c
  2580  00051A  D00C               	goto	l1653
  2581  00051C                     l289:
  2582                           
  2583                           ; BSR set to: 0
  2584  00051C  0009               	tblrd		*+	;# 
  2585                           
  2586                           ;pic18f_bootload.c: 477: check_sum += (uint16_t)TABLAT;
  2587  00051E  50F5               	movf	tablat,w,c	;volatile
  2588  000520  262E               	addwf	_check_sum,f,c
  2589  000522  0E00               	movlw	0
  2590  000524  222F               	addwfc	_check_sum+1,f,c
  2591  000526  0009               	tblrd		*+	;# 
  2592                           
  2593                           ;pic18f_bootload.c: 479: check_sum += (uint16_t)TABLAT << 8;
  2594  000528  50F5               	movf	tablat,w,c	;volatile
  2595  00052A  262F               	addwf	_check_sum+1,f,c
  2596  00052C  0E02               	movlw	2
  2597  00052E  2621               	addwf	Calc_Checksum@i,f,c
  2598  000530  0E00               	movlw	0
  2599  000532  2222               	addwfc	Calc_Checksum@i+1,f,c
  2600  000534                     l1653:
  2601  000534  0100               	movlb	0	; () banked
  2602  000536  5161               	movf	(_frame+1)& (0+255),w,b
  2603  000538  5C21               	subwf	Calc_Checksum@i,w,c
  2604  00053A  0100               	movlb	0	; () banked
  2605  00053C  5162               	movf	(_frame+2)& (0+255),w,b
  2606  00053E  5822               	subwfb	Calc_Checksum@i+1,w,c
  2607  000540  A0D8               	btfss	status,0,c
  2608  000542  D7EC               	goto	l289
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;pic18f_bootload.c: 480: }
  2612                           ;pic18f_bootload.c: 481: frame.data[0] = (uint8_t) (check_sum & 0x00FF);
  2613  000544  C02E  F069         	movff	_check_sum,_frame+9
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;pic18f_bootload.c: 482: frame.data[1] = (uint8_t)((check_sum & 0xFF00) >> 8);
  2617  000548  502F               	movf	_check_sum+1,w,c
  2618  00054A  0100               	movlb	0	; () banked
  2619  00054C  6F6A               	movwf	(_frame+10)& (0+255),b
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;pic18f_bootload.c: 483: return (11);
  2623  00054E  0E0B               	movlw	11
  2624  000550  0012               	return	
  2625  000552                     __end_of_Calc_Checksum:
  2626                           	opt stack 0
  2627                           stkptr	equ	0xFFC
  2628                           pclatu	equ	0xFFB
  2629                           pclath	equ	0xFFA
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           prodh	equ	0xFF4
  2635                           prodl	equ	0xFF3
  2636                           postinc0	equ	0xFEE
  2637                           fsr0h	equ	0xFEA
  2638                           fsr0l	equ	0xFE9
  2639                           wreg	equ	0xFE8
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           indf2	equ	0xFDF
  2643                           postinc2	equ	0xFDE
  2644                           postdec2	equ	0xFDD
  2645                           fsr2h	equ	0xFDA
  2646                           fsr2l	equ	0xFD9
  2647                           status	equ	0xFD8
  2648                           
  2649 ;; *************** function _EUSART1_Write *****************
  2650 ;; Defined at:
  2651 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  txData          1    wreg     unsigned char 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  txData          1   31[COMRAM] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2669 ;;Total ram usage:        1 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    2
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_Run_Bootloader
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text18
  2680  000742                     __ptext18:
  2681                           	opt stack 0
  2682  000742                     _EUSART1_Write:
  2683                           	opt stack 25
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;incstack = 0
  2687                           ;EUSART1_Write@txData stored from wreg
  2688  000742  6E21               	movwf	EUSART1_Write@txData,c
  2689  000744                     l31:
  2690  000744  A89E               	btfss	3998,4,c	;volatile
  2691  000746  D7FE               	goto	l31
  2692                           
  2693                           ;eusart1.c: 100: }
  2694                           ;eusart1.c: 102: TXREG1 = txData;
  2695  000748  C021  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2696  00074C  0012               	return		;funcret
  2697  00074E                     __end_of_EUSART1_Write:
  2698                           	opt stack 0
  2699                           stkptr	equ	0xFFC
  2700                           pclatu	equ	0xFFB
  2701                           pclath	equ	0xFFA
  2702                           tblptru	equ	0xFF8
  2703                           tblptrh	equ	0xFF7
  2704                           tblptrl	equ	0xFF6
  2705                           tablat	equ	0xFF5
  2706                           prodh	equ	0xFF4
  2707                           prodl	equ	0xFF3
  2708                           postinc0	equ	0xFEE
  2709                           fsr0h	equ	0xFEA
  2710                           fsr0l	equ	0xFE9
  2711                           wreg	equ	0xFE8
  2712                           fsr1h	equ	0xFE2
  2713                           fsr1l	equ	0xFE1
  2714                           indf2	equ	0xFDF
  2715                           postinc2	equ	0xFDE
  2716                           postdec2	equ	0xFDD
  2717                           fsr2h	equ	0xFDA
  2718                           fsr2l	equ	0xFD9
  2719                           status	equ	0xFD8
  2720                           
  2721 ;; *************** function _EUSART1_Read *****************
  2722 ;; Defined at:
  2723 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      unsigned char 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    2
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_Run_Bootloader
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text19
  2752  000726                     __ptext19:
  2753                           	opt stack 0
  2754  000726                     _EUSART1_Read:
  2755                           	opt stack 25
  2756  000726                     l24:
  2757  000726  AA9E               	btfss	3998,5,c	;volatile
  2758  000728  D7FE               	goto	l24
  2759                           
  2760                           ;eusart1.c: 82: }
  2761                           ;eusart1.c: 85: if(1 == RCSTA1bits.OERR)
  2762  00072A  A2AB               	btfss	4011,1,c	;volatile
  2763  00072C  D002               	goto	l1665
  2764                           
  2765                           ;eusart1.c: 86: {
  2766                           ;eusart1.c: 89: RCSTA1bits.SPEN = 0;
  2767  00072E  9EAB               	bcf	4011,7,c	;volatile
  2768                           
  2769                           ;eusart1.c: 90: RCSTA1bits.SPEN = 1;
  2770  000730  8EAB               	bsf	4011,7,c	;volatile
  2771  000732                     l1665:
  2772                           
  2773                           ;eusart1.c: 91: }
  2774                           ;eusart1.c: 93: return RCREG1;
  2775  000732  50AE               	movf	4014,w,c	;volatile
  2776  000734  0012               	return	
  2777  000736                     __end_of_EUSART1_Read:
  2778                           	opt stack 0
  2779                           stkptr	equ	0xFFC
  2780                           pclatu	equ	0xFFB
  2781                           pclath	equ	0xFFA
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           postinc0	equ	0xFEE
  2789                           fsr0h	equ	0xFEA
  2790                           fsr0l	equ	0xFE9
  2791                           wreg	equ	0xFE8
  2792                           fsr1h	equ	0xFE2
  2793                           fsr1l	equ	0xFE1
  2794                           indf2	equ	0xFDF
  2795                           postinc2	equ	0xFDE
  2796                           postdec2	equ	0xFDD
  2797                           fsr2h	equ	0xFDA
  2798                           fsr2l	equ	0xFD9
  2799                           status	equ	0xFD8
  2800                           
  2801 ;; *************** function _Check_Device_Reset *****************
  2802 ;; Defined at:
  2803 ;;		line 503 in file "mcc_generated_files/pic18f_bootload.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    2
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_Run_Bootloader
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text20
  2832  00074E                     __ptext20:
  2833                           	opt stack 0
  2834  00074E                     _Check_Device_Reset:
  2835                           	opt stack 25
  2836                           
  2837                           ;pic18f_bootload.c: 505: if (reset_pending == 1)
  2838                           
  2839                           ;incstack = 0
  2840  00074E  0430               	decf	_reset_pending,w,c
  2841  000750  A4D8               	btfss	status,2,c
  2842  000752  0012               	return	
  2843                           
  2844                           ;pic18f_bootload.c: 506: {
  2845                           ;pic18f_bootload.c: 507: LATCbits.LATC1 = 0;
  2846  000754  928B               	bcf	3979,1,c	;volatile
  2847  000756  00FF               	reset		;# 
  2848  000758  0012               	return	
  2849  00075A                     __end_of_Check_Device_Reset:
  2850                           	opt stack 0
  2851                           stkptr	equ	0xFFC
  2852                           pclatu	equ	0xFFB
  2853                           pclath	equ	0xFFA
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           prodh	equ	0xFF4
  2859                           prodl	equ	0xFF3
  2860                           postinc0	equ	0xFEE
  2861                           fsr0h	equ	0xFEA
  2862                           fsr0l	equ	0xFE9
  2863                           wreg	equ	0xFE8
  2864                           fsr1h	equ	0xFE2
  2865                           fsr1l	equ	0xFE1
  2866                           indf2	equ	0xFDF
  2867                           postinc2	equ	0xFDE
  2868                           postdec2	equ	0xFDD
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _Bootload_Required *****************
  2874 ;; Defined at:
  2875 ;;		line 155 in file "mcc_generated_files/pic18f_bootload.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  i               1   31[COMRAM] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      unsigned char 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;Total ram usage:        1 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    2
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_BOOTLOADER_Initialize
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text21
  2904  00064C                     __ptext21:
  2905                           	opt stack 0
  2906  00064C                     _Bootload_Required:
  2907                           	opt stack 26
  2908                           
  2909                           ;pic18f_bootload.c: 162: for (uint8_t i = 0; i != 0xFF; i++) __nop();
  2910                           
  2911                           ;incstack = 0
  2912  00064C  0E00               	movlw	0
  2913  00064E  6E21               	movwf	Bootload_Required@i,c
  2914  000650                     l1237:
  2915  000650  2821               	incf	Bootload_Required@i,w,c
  2916  000652  B4D8               	btfsc	status,2,c
  2917  000654  D003               	goto	l208
  2918  000656  F000               	nop	
  2919  000658  2A21               	incf	Bootload_Required@i,f,c
  2920  00065A  D7FA               	goto	l1237
  2921  00065C                     l208:
  2922                           
  2923                           ;pic18f_bootload.c: 164: if (PORTBbits.RB4 == 0)
  2924  00065C  B881               	btfsc	3969,4,c	;volatile
  2925  00065E  D002               	goto	l1249
  2926                           
  2927                           ;pic18f_bootload.c: 165: {
  2928                           ;pic18f_bootload.c: 166: return (1);
  2929  000660  0E01               	movlw	1
  2930  000662  0012               	return	
  2931  000664                     l1249:
  2932                           
  2933                           ;pic18f_bootload.c: 167: }
  2934                           ;pic18f_bootload.c: 174: TBLPTR = 0x300;
  2935  000664  0E00               	movlw	0
  2936  000666  6EF6               	movwf	tblptrl,c	;volatile
  2937  000668  0E03               	movlw	3
  2938  00066A  6EF7               	movwf	tblptrh,c	;volatile
  2939  00066C  0E00               	movlw	0
  2940  00066E  6EF8               	movwf	tblptru,c	;volatile
  2941                           
  2942                           ;pic18f_bootload.c: 178: EECON1 = 0x80;
  2943  000670  0E80               	movlw	128
  2944  000672  6E7F               	movwf	3967,c	;volatile
  2945  000674  0009               	tblrd		*+	;# 
  2946                           
  2947                           ;pic18f_bootload.c: 180: if (TABLAT == 0xFF)
  2948  000676  28F5               	incf	tablat,w,c	;volatile
  2949  000678  A4D8               	btfss	status,2,c
  2950  00067A  D002               	goto	l1257
  2951                           
  2952                           ;pic18f_bootload.c: 181: {
  2953                           ;pic18f_bootload.c: 182: return (1);
  2954  00067C  0E01               	movlw	1
  2955  00067E  0012               	return	
  2956  000680                     l1257:
  2957                           
  2958                           ;pic18f_bootload.c: 183: }
  2959                           ;pic18f_bootload.c: 184: return (0);
  2960  000680  0E00               	movlw	0
  2961  000682  0012               	return	
  2962  000684                     __end_of_Bootload_Required:
  2963                           	opt stack 0
  2964                           stkptr	equ	0xFFC
  2965                           pclatu	equ	0xFFB
  2966                           pclath	equ	0xFFA
  2967                           tblptru	equ	0xFF8
  2968                           tblptrh	equ	0xFF7
  2969                           tblptrl	equ	0xFF6
  2970                           tablat	equ	0xFF5
  2971                           prodh	equ	0xFF4
  2972                           prodl	equ	0xFF3
  2973                           postinc0	equ	0xFEE
  2974                           fsr0h	equ	0xFEA
  2975                           fsr0l	equ	0xFE9
  2976                           wreg	equ	0xFE8
  2977                           fsr1h	equ	0xFE2
  2978                           fsr1l	equ	0xFE1
  2979                           indf2	equ	0xFDF
  2980                           postinc2	equ	0xFDE
  2981                           postdec2	equ	0xFDD
  2982                           fsr2h	equ	0xFDA
  2983                           fsr2l	equ	0xFD9
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function _service_isr_low *****************
  2987 ;; Defined at:
  2988 ;;		line 134 in file "mcc_generated_files/pic18f_bootload.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		None
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3004 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;Total ram usage:       17 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    1
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		Interrupt level 1
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	intcodelo
  3017  000018                     __pintcodelo:
  3018                           	opt stack 0
  3019  000018                     _service_isr_low:
  3020                           	opt stack 23
  3021                           
  3022                           ;incstack = 0
  3023  000018  8034               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  3024  00001A  CFD8 F010          	movff	status,??_service_isr_low
  3025  00001E  CFE8 F011          	movff	wreg,??_service_isr_low+1
  3026  000022  CFE0 F012          	movff	bsr,??_service_isr_low+2
  3027  000026  CFFA F013          	movff	pclath,??_service_isr_low+3
  3028  00002A  CFFB F014          	movff	pclatu,??_service_isr_low+4
  3029  00002E  CFE9 F015          	movff	fsr0l,??_service_isr_low+5
  3030  000032  CFEA F016          	movff	fsr0h,??_service_isr_low+6
  3031  000036  CFE1 F017          	movff	fsr1l,??_service_isr_low+7
  3032  00003A  CFE2 F018          	movff	fsr1h,??_service_isr_low+8
  3033  00003E  CFD9 F019          	movff	fsr2l,??_service_isr_low+9
  3034  000042  CFDA F01A          	movff	fsr2h,??_service_isr_low+10
  3035  000046  CFF3 F01B          	movff	prodl,??_service_isr_low+11
  3036  00004A  CFF4 F01C          	movff	prodh,??_service_isr_low+12
  3037  00004E  CFF6 F01D          	movff	tblptrl,??_service_isr_low+13
  3038  000052  CFF7 F01E          	movff	tblptrh,??_service_isr_low+14
  3039  000056  CFF8 F01F          	movff	tblptru,??_service_isr_low+15
  3040  00005A  CFF5 F020          	movff	tablat,??_service_isr_low+16
  3041  00005E  EF84 F001          	goto	776	;# 
  3042  000062  C020  FFF5         	movff	??_service_isr_low+16,tablat
  3043  000066  C01F  FFF8         	movff	??_service_isr_low+15,tblptru
  3044  00006A  C01E  FFF7         	movff	??_service_isr_low+14,tblptrh
  3045  00006E  C01D  FFF6         	movff	??_service_isr_low+13,tblptrl
  3046  000072  C01C  FFF4         	movff	??_service_isr_low+12,prodh
  3047  000076  C01B  FFF3         	movff	??_service_isr_low+11,prodl
  3048  00007A  C01A  FFDA         	movff	??_service_isr_low+10,fsr2h
  3049  00007E  C019  FFD9         	movff	??_service_isr_low+9,fsr2l
  3050  000082  C018  FFE2         	movff	??_service_isr_low+8,fsr1h
  3051  000086  C017  FFE1         	movff	??_service_isr_low+7,fsr1l
  3052  00008A  C016  FFEA         	movff	??_service_isr_low+6,fsr0h
  3053  00008E  C015  FFE9         	movff	??_service_isr_low+5,fsr0l
  3054  000092  C014  FFFB         	movff	??_service_isr_low+4,pclatu
  3055  000096  C013  FFFA         	movff	??_service_isr_low+3,pclath
  3056  00009A  C012  FFE0         	movff	??_service_isr_low+2,bsr
  3057  00009E  C011  FFE8         	movff	??_service_isr_low+1,wreg
  3058  0000A2  C010  FFD8         	movff	??_service_isr_low,status
  3059  0000A6  9034               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3060  0000A8  0010               	retfie	
  3061  0000AA                     __end_of_service_isr_low:
  3062                           	opt stack 0
  3063                           stkptr	equ	0xFFC
  3064                           pclatu	equ	0xFFB
  3065                           pclath	equ	0xFFA
  3066                           tblptru	equ	0xFF8
  3067                           tblptrh	equ	0xFF7
  3068                           tblptrl	equ	0xFF6
  3069                           tablat	equ	0xFF5
  3070                           prodh	equ	0xFF4
  3071                           prodl	equ	0xFF3
  3072                           postinc0	equ	0xFEE
  3073                           fsr0h	equ	0xFEA
  3074                           fsr0l	equ	0xFE9
  3075                           wreg	equ	0xFE8
  3076                           fsr1h	equ	0xFE2
  3077                           fsr1l	equ	0xFE1
  3078                           bsr	equ	0xFE0
  3079                           indf2	equ	0xFDF
  3080                           postinc2	equ	0xFDE
  3081                           postdec2	equ	0xFDD
  3082                           fsr2h	equ	0xFDA
  3083                           fsr2l	equ	0xFD9
  3084                           status	equ	0xFD8
  3085                           
  3086 ;; *************** function _service_isr_high *****************
  3087 ;; Defined at:
  3088 ;;		line 128 in file "mcc_generated_files/pic18f_bootload.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		None
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3104 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3105 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;Total ram usage:       14 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		Interrupt level 2
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	intcode
  3116  000008                     __pintcode:
  3117                           	opt stack 0
  3118  000008                     _service_isr_high:
  3119                           	opt stack 23
  3120                           
  3121                           ;incstack = 0
  3122  000008  8234               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3123  00000A  EF9D  F001         	goto	int_func
  3124                           stkptr	equ	0xFFC
  3125                           pclatu	equ	0xFFB
  3126                           pclath	equ	0xFFA
  3127                           tblptru	equ	0xFF8
  3128                           tblptrh	equ	0xFF7
  3129                           tblptrl	equ	0xFF6
  3130                           tablat	equ	0xFF5
  3131                           prodh	equ	0xFF4
  3132                           prodl	equ	0xFF3
  3133                           postinc0	equ	0xFEE
  3134                           fsr0h	equ	0xFEA
  3135                           fsr0l	equ	0xFE9
  3136                           wreg	equ	0xFE8
  3137                           fsr1h	equ	0xFE2
  3138                           fsr1l	equ	0xFE1
  3139                           bsr	equ	0xFE0
  3140                           indf2	equ	0xFDF
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           stkptr	equ	0xFFC
  3147                           pclatu	equ	0xFFB
  3148                           pclath	equ	0xFFA
  3149                           tblptru	equ	0xFF8
  3150                           tblptrh	equ	0xFF7
  3151                           tblptrl	equ	0xFF6
  3152                           tablat	equ	0xFF5
  3153                           prodh	equ	0xFF4
  3154                           prodl	equ	0xFF3
  3155                           postinc0	equ	0xFEE
  3156                           fsr0h	equ	0xFEA
  3157                           fsr0l	equ	0xFE9
  3158                           wreg	equ	0xFE8
  3159                           fsr1h	equ	0xFE2
  3160                           fsr1l	equ	0xFE1
  3161                           bsr	equ	0xFE0
  3162                           indf2	equ	0xFDF
  3163                           postinc2	equ	0xFDE
  3164                           postdec2	equ	0xFDD
  3165                           fsr2h	equ	0xFDA
  3166                           fsr2l	equ	0xFD9
  3167                           status	equ	0xFD8
  3168                           
  3169                           	psect	rparam
  3170  0000                     stkptr	equ	0xFFC
  3171                           pclatu	equ	0xFFB
  3172                           pclath	equ	0xFFA
  3173                           tblptru	equ	0xFF8
  3174                           tblptrh	equ	0xFF7
  3175                           tblptrl	equ	0xFF6
  3176                           tablat	equ	0xFF5
  3177                           prodh	equ	0xFF4
  3178                           prodl	equ	0xFF3
  3179                           postinc0	equ	0xFEE
  3180                           fsr0h	equ	0xFEA
  3181                           fsr0l	equ	0xFE9
  3182                           wreg	equ	0xFE8
  3183                           fsr1h	equ	0xFE2
  3184                           fsr1l	equ	0xFE1
  3185                           bsr	equ	0xFE0
  3186                           indf2	equ	0xFDF
  3187                           postinc2	equ	0xFDE
  3188                           postdec2	equ	0xFDD
  3189                           fsr2h	equ	0xFDA
  3190                           fsr2l	equ	0xFD9
  3191                           status	equ	0xFD8
  3192                           
  3193                           	psect	temp
  3194  000034                     btemp:
  3195                           	opt stack 0
  3196  000034                     	ds	1
  3197  0000                     int$flags	set	btemp
  3198                           stkptr	equ	0xFFC
  3199                           pclatu	equ	0xFFB
  3200                           pclath	equ	0xFFA
  3201                           tblptru	equ	0xFF8
  3202                           tblptrh	equ	0xFF7
  3203                           tblptrl	equ	0xFF6
  3204                           tablat	equ	0xFF5
  3205                           prodh	equ	0xFF4
  3206                           prodl	equ	0xFF3
  3207                           postinc0	equ	0xFEE
  3208                           fsr0h	equ	0xFEA
  3209                           fsr0l	equ	0xFE9
  3210                           wreg	equ	0xFE8
  3211                           fsr1h	equ	0xFE2
  3212                           fsr1l	equ	0xFE1
  3213                           bsr	equ	0xFE0
  3214                           indf2	equ	0xFDF
  3215                           postinc2	equ	0xFDE
  3216                           postdec2	equ	0xFDD
  3217                           fsr2h	equ	0xFDA
  3218                           fsr2l	equ	0xFD9
  3219                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      50
    BANK0           160      0      73
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _BOOTLOADER_Initialize->_Run_Bootloader
    _Run_Bootloader->_ProcessBootBuffer
    _ProcessBootBuffer->_Write_Flash

Critical Paths under _service_isr_low in COMRAM

    None.

Critical Paths under _service_isr_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service_isr_low in BANK0

    None.

Critical Paths under _service_isr_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service_isr_low in BANK1

    None.

Critical Paths under _service_isr_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service_isr_low in BANK2

    None.

Critical Paths under _service_isr_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service_isr_low in BANK3

    None.

Critical Paths under _service_isr_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service_isr_low in BANK4

    None.

Critical Paths under _service_isr_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service_isr_low in BANK5

    None.

Critical Paths under _service_isr_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service_isr_low in BANK6

    None.

Critical Paths under _service_isr_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service_isr_low in BANK7

    None.

Critical Paths under _service_isr_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service_isr_low in BANK8

    None.

Critical Paths under _service_isr_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service_isr_low in BANK9

    None.

Critical Paths under _service_isr_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service_isr_low in BANK10

    None.

Critical Paths under _service_isr_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service_isr_low in BANK11

    None.

Critical Paths under _service_isr_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service_isr_low in BANK12

    None.

Critical Paths under _service_isr_high in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service_isr_low in BANK13

    None.

Critical Paths under _service_isr_high in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service_isr_low in BANK14

    None.

Critical Paths under _service_isr_high in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     706
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     706
              _BOOTLOADER_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BOOTLOADER_Initialize                                0     0      0     706
                  _Bootload_Required
                     _Run_Bootloader
 ---------------------------------------------------------------------------------
 (3) _Run_Bootloader                                       3     3      0     676
                                             39 COMRAM     3     3      0
                 _Check_Device_Reset
                       _EUSART1_Read
                      _EUSART1_Write
                  _ProcessBootBuffer
 ---------------------------------------------------------------------------------
 (4) _ProcessBootBuffer                                    1     1      0     469
                                             38 COMRAM     1     1      0
                      _Calc_Checksum
                        _Erase_Flash
                   _Get_Version_Data
                        _Read_Config
                       _Read_EE_Data
                         _Read_Flash
                       _Write_Config
                      _Write_EE_Data
                        _Write_Flash
 ---------------------------------------------------------------------------------
 (5) _Write_Flash                                          7     7      0      68
                                             31 COMRAM     7     7      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (5) _Write_EE_Data                                        3     3      0      68
                                             31 COMRAM     3     3      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (5) _Write_Config                                         3     3      0      46
                                             31 COMRAM     3     3      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (5) _Read_Flash                                           3     3      0      46
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _Read_EE_Data                                         3     3      0      46
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _Read_Config                                          3     3      0      46
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _Get_Version_Data                                     1     1      0      68
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Erase_Flash                                          2     2      0      24
                                             31 COMRAM     2     2      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (6) _StartWrite                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Calc_Checksum                                        2     2      0      24
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Check_Device_Reset                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Bootload_Required                                    1     1      0      30
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _service_isr_low                                     17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _service_isr_high                                    14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _BOOTLOADER_Initialize
       _Bootload_Required
       _Run_Bootloader
         _Check_Device_Reset
         _EUSART1_Read
         _EUSART1_Write
         _ProcessBootBuffer
           _Calc_Checksum
           _Erase_Flash
             _StartWrite
           _Get_Version_Data
           _Read_Config
           _Read_EE_Data
           _Read_Flash
           _Write_Config
             _StartWrite
           _Write_EE_Data
             _StartWrite
           _Write_Flash
             _StartWrite
     _EUSART1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _service_isr_low (ROOT)

 _service_isr_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E3F      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      49       5       45.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      32       1       53.2%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7B       6        0.0%
DATA                 0      0      7B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Nov 29 22:34:17 2017

                  ??_Erase_Flash 0021                               l31 0744  
                             l24 0726                               bsr 000FE0  
         __size_of_Calc_Checksum 0058                              l230 0314  
                            l208 065C                              l321 0178  
                            l226 0256                              l322 016E  
                            l243 00F6                              l236 0568  
                            l325 01D2                              l318 0164  
                            l247 0132                              l266 04A6  
                            l275 05BC                              l259 060C  
                            l368 075E                              l289 051C  
           __size_of_Write_Flash 00B6                              u530 044C  
                            u490 00EC                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAC  
          _BOOTLOADER_Initialize 06D2                             l1237 0650  
                           l1501 0588                             l1511 00C4  
                           l1257 0680                             l1249 0664  
                           l1541 0440                             l1613 05DC  
                           l1527 013A                             l1625 03D2  
                           l1529 013C                             l1627 03DC  
                           l1635 0402                             l1715 018A  
                           l1653 0534                             l1549 0456  
                           l1557 046E                             l1741 0204  
                           l1479 030C                             l1575 062E  
                           l1665 0732                             l1489 0336  
                           l1681 022A                             l1737 01EC  
                           l1729 01CC                             l1691 0248  
                           l1683 0230                             l1675 0218  
                           l1597 04DA                             l1693 024E  
                           l1685 0236                             l1677 021E  
                           l1687 023C                             l1679 0224  
                           l1689 0242                             l1697 0260  
                           l1699 02A2               Bootload_Required@i 0021  
                           _LATA 000F89                             _LATB 000F8A  
          __size_of_Write_Config 0078                             _LATC 000F8B  
                           _WPUB 000F5B                    _EUSART1_Write 0742  
                  ?_Read_EE_Data 0002                             _main 075A  
                  ?_EUSART1_Read 0002                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0034                             prodh 000FF4  
                           prodl 000FF3                             start 00AA  
         __size_of_Write_EE_Data 0066                     ___param_bank 000000  
                  ??_Read_Config 0021         __size_of_service_isr_low 0092  
     __size_of_ProcessBootBuffer 0098                     _BAUDCON1bits 000FA7  
 __size_of_OSCILLATOR_Initialize 0012    __end_of_OSCILLATOR_Initialize 0726  
                          ?_main 0002                            _EEADR 000F74  
            __end_of_Erase_Flash 0494                            _RCREG 000FAE  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                     _Write_Config 03B2  
                          _frame 0060                   ?_EUSART1_Write 0002  
                          pclath 000FFA                            tablat 000FF5  
                  _Calc_Checksum 04FA                   ??_Read_EE_Data 0021  
                    Read_Flash@i 0023                   ??_EUSART1_Read 0021  
                          status 000FD8                  __initialization 06AC  
                     _Read_Flash 0552       __end_of_EUSART1_Initialize 0702  
                   __end_of_main 0760                           ??_main 002C  
                  __activetblptr 000002              __end_of_Read_Config 05FA  
                  _Write_EE_Data 0494           ?_BOOTLOADER_Initialize 0002  
                         _EEADRH 000F75                           _EEDATA 000F73  
       __end_of_service_isr_high 03B2                           _EECON1 000F7F  
                         _EECON2 000F7E                           _ANCON0 000F5D  
                         _ANCON1 000F5C                   ?_Calc_Checksum 0002  
                 Write_EE_Data@i 0023                           _TABLAT 000FF5  
                         _RCREG1 000FAE                           _RCSTA1 000FAB  
                         _OSCCON 000FD3                           _TBLPTR 000FF6  
                         _SPBRG1 000FAF                           _STKPTR 000FFC  
                         _TXREG1 000FAD                           _TXSTA1 000FAC  
      __size_of_Get_Version_Data 0094                      _Erase_Flash 042A  
                         clear_0 06B2                           clear_1 06BE  
    __size_of_Check_Device_Reset 000C                   ?_Write_EE_Data 0002  
              ??_service_isr_low 0010                     Read_Config@i 0023  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                  ??_EUSART1_Write 0021  
                     _StartWrite 0736                _SYSTEM_Initialize 0702  
                     __accesstop 0060          __end_of__initialization 06C4  
             ?_SYSTEM_Initialize 0002                    ___rparam_used 000001  
                 __pcstackCOMRAM 0002                      ?_Read_Flash 0002  
            ??_SYSTEM_Initialize 002C                      _Read_Config 05A6  
           __end_of_Read_EE_Data 064C             __end_of_EUSART1_Read 0736  
                ??_Calc_Checksum 0021        __end_of_SYSTEM_Initialize 0714  
                     __pbssBANK0 0060                     Write_Flash@i 0027  
                  ??_Write_Flash 0021                  ??_Write_EE_Data 0021  
                  Read_EE_Data@i 0023                          _REFOCON 000F9A  
                        _OSCCON2 000FD2                          _TBLPTRH 000FF7  
                        _TBLPTRL 000FF6                          _TBLPTRU 000FF8  
                        _OSCTUNE 000F9B                          _SPBRGH1 000F7D  
                    ?_StartWrite 0002              __size_of_Read_Flash 0054  
        __size_of_Run_Bootloader 00AA                 _Get_Version_Data 02A6  
                        __Hparam 0000                          __Lparam 0000  
                        __pcinit 06AC                          __ramtop 0F00  
        ??_BOOTLOADER_Initialize 002C                          __ptext0 075A  
                        __ptext1 0702                          __ptext2 0684  
                        __ptext3 0714                          __ptext4 06EC  
                        __ptext5 06D2                          __ptext6 0164  
                        __ptext7 020E                          __ptext8 00AE  
                        __ptext9 0494                          _counter 002C  
          _OSCILLATOR_Initialize 0714              __end_of_Write_Flash 0164  
             _EUSART1_Initialize 06EC         ??_PIN_MANAGER_Initialize 0021  
                        _rx_data 0032                          _tx_data 0031  
     __size_of_SYSTEM_Initialize 0012                   __pintcode_body 033A  
           end_of_initialization 06C4                ?_service_isr_high 0002  
            ?_EUSART1_Initialize 0002               ??_service_isr_high 0002  
                  __Lmediumconst 0000                          int_func 033A  
                _service_isr_low 0018            __size_of_Read_EE_Data 0052  
                        postdec2 000FDD                     ?_Erase_Flash 0002  
                        postinc0 000FEE                          postinc2 000FDE  
          __size_of_EUSART1_Read 0010             ??_EUSART1_Initialize 0021  
            __size_of_StartWrite 000C                        _PORTBbits 000F81  
            EUSART1_Write@txData 0021                     _Read_EE_Data 05FA  
                   _EUSART1_Read 0726                     ??_Read_Flash 0021  
                   ?_Read_Config 0002       __end_of_Check_Device_Reset 075A  
                    _Write_Flash 00AE           ?_OSCILLATOR_Initialize 0002  
            start_initialization 06AC  __size_of_PIN_MANAGER_Initialize 0028  
          __end_of_EUSART1_Write 074E               __end_of_Read_Flash 05A6  
                 _Run_Bootloader 0164          __end_of_service_isr_low 00AA  
              _Bootload_Required 064C               ?_Bootload_Required 0002  
            ??_Bootload_Required 0021                    ?_Write_Config 0002  
       __end_of_Get_Version_Data 033A                      __pbssCOMRAM 002C  
                    _data_length 0033                     ??_StartWrite 0021  
          __end_of_Calc_Checksum 0552           __end_of_Run_Bootloader 020E  
                  Write_Config@i 0023                        _check_sum 002E  
      __end_of_Bootload_Required 0684           _PIN_MANAGER_Initialize 0684  
                      __pintcode 0008                      __pintcodelo 0018  
           __size_of_Erase_Flash 006A               __end_of_StartWrite 0742  
                 ??_Write_Config 0021            __end_of_Write_EE_Data 04FA  
 __size_of_BOOTLOADER_Initialize 001A    __end_of_BOOTLOADER_Initialize 06EC  
                       _BAUDCON1 000FA7                  ?_Run_Bootloader 0002  
                       _EE_Key_1 000000                         _EE_Key_2 000001  
                       _LATCbits 000F8B                 ?_service_isr_low 0002  
                  _reset_pending 0030                         _PIR1bits 000F9E  
                       _PIR4bits 000FB7        __size_of_service_isr_high 03AA  
           __size_of_Read_Config 0054         Run_Bootloader@msg_length 002A  
           ProcessBootBuffer@len 0028                       _EECON1bits 000F7F  
     __size_of_Bootload_Required 0038                         __Hrparam 0000  
                       __Lrparam 0000          ??_OSCILLATOR_Initialize 0021  
                   ?_Write_Flash 0002      __size_of_EUSART1_Initialize 0016  
             _Check_Device_Reset 074E                         __ptext10 03B2  
                       __ptext11 0552                         __ptext20 074E  
                       __ptext12 05FA                         __ptext21 064C  
                       __ptext13 05A6                         __ptext14 02A6  
                       __ptext15 042A                         __ptext16 0736  
                       __ptext17 04FA                         __ptext18 0742  
                       __ptext19 0726              ?_Check_Device_Reset 0002  
                  __size_of_main 0006                 Run_Bootloader@ch 0029  
           __end_of_Write_Config 042A              Run_Bootloader@index 002B  
                       int$flags 0034             ??_Check_Device_Reset 0021  
              _ProcessBootBuffer 020E                       _INTCONbits 000FF2  
              Get_Version_Data@i 0021               ?_ProcessBootBuffer 0002  
              ?_Get_Version_Data 0002               ??_Get_Version_Data 0021  
                       intlevel1 0000              ??_ProcessBootBuffer 0028  
                       intlevel2 0000          ?_PIN_MANAGER_Initialize 0002  
                     _RCSTA1bits 000FAB                 _service_isr_high 0008  
      __end_of_ProcessBootBuffer 02A6           __size_of_EUSART1_Write 000C  
                   Erase_Flash@i 0021                 ??_Run_Bootloader 0029  
 __end_of_PIN_MANAGER_Initialize 06AC                   Calc_Checksum@i 0021  
